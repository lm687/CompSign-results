import numpy as np
from os import listdir
import uuid

#--------------- Change paths to external software ---------------#
path_to_TCSM='/Users/lenamorrill/Software/tcsm'
#-----------------------------------------------------------------#

configfile: "config_PCAWG_do_not_modify.yaml"
cancer_types = config["sample_groups"]
# cancer_type = "Cervix-SCC"
grouped_samples = config["grouped_samples"]

samples_list = dict(zip(cancer_types, [grouped_samples[ct].split() for ct in cancer_types]))

## number of categories or signatures for each Mixture simulation framework
d_list = {'GenerationMixtureSimulation': 4, 'GenerationMixtureSimulationv4': 4,\
 'GenerationMixtureSimulationv5': 4, 'GenerationMixtureSimulationv6': 4, 'GenerationMixtureSimulationv7': 4,\
 'GenerationMixtureSimulationTwoCT': 6}

def remove_end(i):
    return i[:-3]


rule all:
    input:
      # expand("../data/restricted/pcawg/pcawg_restricted_snv/{sample}.consensus.20160830.somatic.snv_mnv.vcf.gz.tbi", sample=config["samples"]),
      # expand("../data/restricted/pcawg/pcawg_restricted_snv_counts/{sample}", sample=config["samples"]),
      # expand("../data/roo/{cancer_type}_{feature_type}_ROO.RDS", feature_type=config["feature_types"], cancer_type=cancer_types),
      # expand("../data/roo/{cancer_type}_{feature_type}_ROO.RDS", feature_type="signaturesmutSigExtractor", cancer_type=cancer_types),
      # expand("../data/roo/{cancer_type}_{feature_type}_ROO.RDS", feature_type="signaturesPCAWG", cancer_type=cancer_types)
      # expand("../data/roo/{cancer_type}_signaturesMSE_ROO2.RDS", cancer_type=[x for x in cancer_types if not any(y in x for y in ['Myeloid-AML','Breast-DCIS', 'Melanoma.mucosal'])]) ## mutsigextractor on pcawg signatures
      # --------------------------------------------------------------------------------------------------------- #
      #expand("../data/assessing_models_simulation/summaries_synthetic_DA/{datasetgeneration}.RDS",\
      # datasetgeneration=[ 'GenerationJnorm'])
      # expand("../data/assessing_models_simulation/summaries_synthetic_DA/{datasetgeneration}.RDS",\
      # datasetgeneration=[ 'GenerationJnormBTwoLambdasOneChangingBeta'])
      # expand("../data/assessing_models_simulation/summaries_synthetic_DA/{datasetgeneration}.RDS",\
      # datasetgeneration=[ 'GenerationJnormChangingNmBTwoLambdasOneChangingBeta'])
      # expand("../results/results_TMB/simulated_datasets/mixed_effects_models_multiple/{datasetgeneration}/{datasetgeneration}_{model}/{datasetgeneration}_{model}_results_info.txt",\
      # datasetgeneration=['GenerationMixture1'], model=['fullREM', 'diagREDM', 'fullREDMsinglelambda', 'diagREDMsinglelambda'])      # expand("../results/results_TMB/simulated_datasets/mixed_effects_models_multiple/{datasetgeneration}/{datasetgeneration}_{model}/{datasetgeneration}_{model}_results_info.txt",\
      # datasetgeneration=['GenerationK', 'GenerationK2', 'GenerationJnormTwoLambdas', 'GenerationInoREtwolambdas', 'generationHnormtwolambdas'], model=['fullREM', 'diagREDM', 'fullREDMsinglelambda', 'diagREDMsinglelambda'])
      #expand("../data/assessing_models_simulation/summaries_synthetic_DA/{datasetgeneration}.RDS",\
      # datasetgeneration=[ 'GenerationJnorm', 'GenerationJnorm2', 'GenerationJnorm3'])
      #expand("../data/assessing_models_simulation/summaries_synthetic_DA/{datasetgeneration}.RDS",\
      # expand("../data/assessing_models_simulation/summaries_synthetic_DA/{datasetgeneration}.RDS",\
      # datasetgeneration=[ 'GenerationJnorm', 'GenerationJnorm2', 'GenerationJnorm3'])
      # expand("../data/assessing_models_simulation/summaries_synthetic_DA/{datasetgeneration}.RDS",\
      # datasetgeneration=[ 'GenerationJnorm'])
      # expand("../results/results_TMB/simulated_datasets/mixed_effects_models_multiple/{datasetgeneration}/{datasetgeneration}_{model}/{datasetgeneration}_{model}_results_info.txt",\
      # datasetgeneration=['GenerationMixture1'], model=['fullREM', 'diagREDM', 'fullREDMsinglelambda', 'diagREDMsinglelambda'])
      # expand("../data/assessing_models_simulation/summaries_synthetic_DA/{datasetgeneration}.RDS",\
      #  datasetgeneration=[ 'GenerationCnorm', 'GenerationJnorm', 'GenerationJnorm2', 'GenerationJnorm3', 'GenerationK', 'GenerationK2', 'GenerationJnormTwoLambdas', 'GenerationInoREtwolambdas',\
      #   'generationHnormtwolambdas'])
      # expand("../data/assessing_models_simulation/summaries_synthetic_DA/{datasetgeneration}.RDS",\
      #  datasetgeneration=['GenerationMixture1'])
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      #  datasetgeneration='GenerationMGnorm', model=['fullREDM', 'diagREDM', 'singleREDM'], fixed_beta_intercept = 'betaintercept3',\
      # fixed_beta_slope = 'betaslope3', sdRE_input = 'sdRE1',  n = 200, nlambda = 180, lmbda = 100, d = 6,
      # beta_intensity=0),
      # [expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      #  datasetgeneration='GenerationMGnorm', model=['singleREDM'], fixed_beta_intercept = 'betaintercept3',\
      # fixed_beta_slope = 'betaslope3', sdRE_input = 'sdRE1',  n = 200, nlambda = 180, lmbda = 100, d = 6,
      # beta_intensity=0),
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['diagREDM', 'fullREDM'], fixed_beta_intercept = 'betaintercept1d4',\
      # fixed_beta_slope = 'betaslope1d4', sdRE_input = 'covmat1d4',  n = 200, nlambda = 180, lmbda = [2, 20, 100], d = 5,
      # beta_intensity=0)
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['singleREDM'], fixed_beta_intercept = 'betaintercept1d4',\
      # fixed_beta_slope = 'betaslope1d4', sdRE_input = 'covmat1d4',  n = 200, nlambda = 180, lmbda = [2, 20, 100], d = 5,
      # beta_intensity=0),
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['diagREDM', 'fullREDM'], fixed_beta_intercept = 'betaintercept1d3',\
      # fixed_beta_slope = 'betaslope1d3', sdRE_input = 'covmat1d3',  n = 200, nlambda = 180, lmbda = [2, 20], d = 4,
      # beta_intensity=0)
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['fullREDM'], fixed_beta_intercept = ['betaintercept1d2', 'betaintercept2d2'],\
      # fixed_beta_slope = ['betaslope1d2', 'betaslope2d2'], sdRE_input = 'covmat1d2',  n = 200, nlambda = 180, lmbda = [20], d = 3,
      # beta_intensity=0)
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['fullREDM', 'diagREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG1',\
      # fixed_beta_slope = 'betaslopePCAWG1',\
      # sdRE_input = 'covmatPCAWG1',\
      # n = 200, nlambda = 180, lmbda = [0.06], d = 8, beta_intensity=0)
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['fullREDM', 'diagREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG2',\
      # fixed_beta_slope = 'betaslopePCAWG2',\
      # sdRE_input = 'covmatPCAWG2',\
      # n = 200, nlambda = 180, lmbda = [0.06], d = 6, beta_intensity=0)
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['fullREDM', 'diagREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG2',\
      # fixed_beta_slope = 'betaslopePCAWG2',\
      # sdRE_input = 'covmatPCAWG2',\
      # n = 200, nlambda = 180, lmbda = [100], d = 6, beta_intensity=0)
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['diagREcorDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG2',\
      # fixed_beta_slope = 'betaslopePCAWG2',\
      # sdRE_input = 'covmatPCAWG2',\
      # n = 200, nlambda = 3401, lmbda = [2], d = 6, beta_intensity=0)
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['diagREDM', 'fullREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG2',\
      # fixed_beta_slope = 'betaslopePCAWG2',\
      # sdRE_input = 'covmatPCAWG2',\
      # n = 200, nlambda = 3401, lmbda = [18], d = 6, beta_intensity=0) ## using all params which were estimated: betas, cov, lambda, num muts per sample
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['diagREDM', 'fullREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG2',\
      # fixed_beta_slope = 'betaslopePCAWG2',\
      # sdRE_input = 'covmatFULLPCAWG2',\
      # n = 200, nlambda = 3401, lmbda = [28], d = 6, beta_intensity=0) ## TO RUN!! using all params, as above, but from the fullRE DM
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['diagREDM', 'fullREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG3',\
      # fixed_beta_slope = 'betaslopePCAWG3',\
      # sdRE_input = 'covmatPCAWG3',\
      # n = 208, nlambda = 1516, lmbda = [32], d = 14, beta_intensity=0) ## takes too long. killed
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['diagREDM', 'fullREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG4',\
      # fixed_beta_slope = 'betaslopePCAWG4',\
      # sdRE_input = 'covmatPCAWG4',\
      # n = 200, nlambda = 14072, lmbda = [80], d = 6, beta_intensity=0) ## good
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['diagREDM', 'fullREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG4',\
      # fixed_beta_slope = 'betaslopePCAWG4',\
      # sdRE_input = 'covmatFULLPCAWG4',\
      # n = 200, nlambda = 14072, lmbda = [87], d = 6, beta_intensity=0) ## as above but with fullRE cov mat and lambda
      # --------------------------------------------------------------------------------------------------------- #
      ## Biological-driven simulation #4, with a variable lambda
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', \
      # model=['diagREDM', 'fullREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG6',\
      # fixed_beta_slope = 'betaslopePCAWG6',\
      # sdRE_input = 'covmatFULLPCAWG6',\
      # n = 'nPCAWG6', nlambda = 'nlambdaPCAWG6',\
      # lmbda = ['lowlambdaPCAWG6', 'lambdaPCAWG6', 'highlambdaPCAWG6'],\
      # d = 'dPCAWG6', beta_intensity=0)
      ## SingleREDM
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['singleREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG6',\
      # fixed_beta_slope = 'betaslopePCAWG6',\
      # sdRE_input = 'covmatFULLPCAWG6',\
      # n = 'nPCAWG6', nlambda = 'nlambdaPCAWG6',\
      # lmbda = ['lambdaPCAWG6'],\
      # d = 'dPCAWG6', beta_intensity=0)
      # --------------------------------------------------------------------------------------------------------- #
      ## Biological-driven simulation #4, with a lower number of mutations   
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['diagREDM', 'fullREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG6',\
      # fixed_beta_slope = 'betaslopePCAWG6',\
      # sdRE_input = 'covmatFULLPCAWG6',\
      # n = 'nPCAWG6', \
      # nlambda = 'low5nlambdaPCAWG6',\
      # #['lownlambdaPCAWG6', 'low2nlambdaPCAWG6', 'low3nlambdaPCAWG6',],\
      # lmbda = ['lambdaPCAWG6'],\
      # d = 'dPCAWG6', beta_intensity=0)
      # --------------------------------------------------------------------------------------------------------- #
      ## Baseline simulation
      ## Biological-driven simulation equivalent to #2
      ## (setsim_multiple_GenerationJnorm_nlminb_200_14072_80_6_0_fullREDM_betainterceptPCAWG4_betaslopePCAWG4_covmatPCAWG4_onlyconverged_coverage_beta_v3)
      ## but inverting the columns to show that the choice of baseline does not matter
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnormInv', model=['diagREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG4',\
      # fixed_beta_slope = 'betaslopePCAWG4',\
      # sdRE_input = 'covmatPCAWG4',\
      # n = 200, nlambda = 14072, lmbda = 80, d = 6, beta_intensity=0)
      ## ... or using as baseline the column with the highest abundance
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnormMax', model=['diagREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG4',\
      # fixed_beta_slope = 'betaslopePCAWG4',\
      # sdRE_input = 'covmatPCAWG4',\
      # n = 200, nlambda = 14072, lmbda = 80, d = 6, beta_intensity=0)
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration=[ 'GenerationJnormMax', 'GenerationJnorm'],
      # model=['diagREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG4',\
      # fixed_beta_slope = ['betaslopezerosPCAWG4', 'betaslopeonechangingPCAWG4'],\
      # sdRE_input = 'covmatPCAWG4',\
      # n = 200, nlambda = 14072, lmbda = 80, d = 6, beta_intensity=0)
      # --------------------------------------------------------------------------------------------------------- #
      ## Simulation for HilDA, TCSM, CompSign
      ## Simulating data using mixtures. Now, here, the beta represents the ALR of the mixture proporions
      # --------------------- #
      ## CompSign results:
      # expand("../data/assessing_models_simulation/inference_results/TMB/{optimiser}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # datasetgeneration='GenerationMixtureSimulation',\
      # model=['diagREDM'], optimiser = 'nlminb', \
      # fixed_beta_intercept = 'NA', fixed_beta_slope = 'NA',\
      # sdRE_input = 'NA', n = ['100', '150'], nlambda = '200', lmbda = ['NA'],\
      # d = 'NA', beta_intensity=[-8, -7, -6, -5,  -3.75, -3.5, -3.25, -3, -2.75, -2.5, -2.25, -2, -1, 0, 0.5, 1],\
      # itnum=range(10))
      ## fixed number of mutations in each of the subsamples
      # expand("../data/assessing_models_simulation/datasets/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # expand("../data/assessing_models_simulation/inference_results/TMB/{optimiser}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # datasetgeneration=['GenerationMixtureSimulationv7'],\
      # ## GenerationMixtureSimulationv4
      # model=['diagREDM'], optimiser = 'nlminb', \
      # fixed_beta_intercept = 'NA', fixed_beta_slope = 'NA',\
      # sdRE_input = 'NA', n = ['20', '100'], nlambda = '50', lmbda = ['NA'],\
      # d = 'NA',\
      # beta_intensity=[-8, -7, -6, -5,  -3.75, -3.5, -3.25, -3, -2.75, -2.5, -2.25, -2, -1, 0, 0.5, 1],\
      # itnum=range(10))
      # expand("../data/assessing_models_simulation/inference_results/TMB/{optimiser}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # datasetgeneration=['GenerationMixtureSimulationv6'],\
      # # GenerationMixtureSimulationv5
      # model=['diagREDM'], optimiser = 'nlminb', \
      # fixed_beta_intercept = 'NA', fixed_beta_slope = 'NA',\
      # sdRE_input = 'NA', n = ['100'], nlambda = 'NA', lmbda = ['NA'],\
      # d = 'NA',\
      # beta_intensity=[-8, -7, -6, -5,  -3.75, -3.5, -3.25, -3, -2.75, -2.5, -2.25, -2, -1, 0, 0.5, 1],\
      # itnum=range(10))
      # expand("../data/assessing_models_simulation/inference_results/TMB/{optimiser}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # datasetgeneration=['GenerationMixtureSimulationTwoCT'],\
      # model=['diagREDM'], optimiser = 'nlminb', \
      # fixed_beta_intercept = 'NA', fixed_beta_slope = 'NA',\
      # sdRE_input = 'NA', n = ['100'], nlambda = ['50', '1773'], lmbda = ['NA'],\
      # d = 'NA', beta_intensity=[-8, -7, -6, -5,  -3.75, -3.5, -3.25, -3, -2.75, -2.5, -2.25, -2, -1, 0, 0.5, 1], itnum=range(10))
      # --------------------- #
      ## HilDA results:
      ## as it is slow, start with a subset of parameters
      # [expand("../data/assessing_models_simulation/inference_results/HiLDA/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # datasetgeneration='GenerationMixtureSimulation',\
      # model=['HiLDA'], fixed_beta_intercept = 'NA', fixed_beta_slope = 'NA',\
      # sdRE_input = 'NA', n = ['100', '150'], nlambda = '200', lmbda = ['NA'],\
      # d = 'NA', beta_intensity=[-8, -3, 0], itnum=range(10))
      # ]
      # [expand("../data/assessing_models_simulation/inference_results/HiLDA/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # datasetgeneration='GenerationMixtureSimulationv4',\
      # model=['HiLDA'], fixed_beta_intercept = 'NA', fixed_beta_slope = 'NA',\
      # sdRE_input = 'NA', n = ['100', '150'], nlambda = '200', lmbda = ['NA'],\
      # d = 'NA', beta_intensity=[-8, -7, -6, -5,  -3.75, -3.5, -3.25, -3, -2.75, -2.5, -2.25, -2, -1, 0, 0.5, 1], itnum=range(10))
      # ]
      # --------------------- #
      ## TCSM results:
      ## see below (rule inference_simulation_TCSM_multiple_2) for a discussion on the conda env that must be used (tcsm)
      # expand("../data/assessing_models_simulation/inference_results/TCSM/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # datasetgeneration='GenerationMixtureSimulation',\
      # model=['TCSM'], fixed_beta_intercept = 'NA', fixed_beta_slope = 'NA',\
      # sdRE_input = 'NA', n = ['100', '150'], nlambda = '200', lmbda = ['NA'],\
      # d = 'NA', beta_intensity=[-8, -7, -6, -5,  -3.75, -3.5, -3.25, -3, -2.75, -2.5, -2.25, -2, -1, 0, 0.5, 1], itnum=range(10))
      # expand("../data/assessing_models_simulation/inference_results/TCSM/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # datasetgeneration=['GenerationMixtureSimulationv7'],\
      # # GenerationMixtureSimulationv4
      # model=['TCSM'],\
      # fixed_beta_intercept = 'NA', fixed_beta_slope = 'NA',\
      # sdRE_input = 'NA', n = ['20', '100'], nlambda = '50', lmbda = ['NA'],\
      # d = 'NA', beta_intensity=[-8, -7, -6, -5,  -3.75, -3.5, -3.25, -3, -2.75, -2.5, -2.25, -2, -1, 0, 0.5, 1], itnum=range(10))
      ## no differences in the number of mutations in each group, but the number of mutations is taken from the observed data
      # expand("../data/assessing_models_simulation/datasets/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # expand("../data/assessing_models_simulation/inference_results/TCSM/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # datasetgeneration=[ 'GenerationMixtureSimulationv6'],\
      # # GenerationMixtureSimulationv5
      # model=['TCSM'],\
      # fixed_beta_intercept = 'NA', fixed_beta_slope = 'NA',\
      # sdRE_input = 'NA', n = ['100'], nlambda = 'NA', lmbda = ['NA'],\
      # d = 'NA', beta_intensity=[-8, -7, -6, -5,  -3.75, -3.5, -3.25, -3, -2.75, -2.5, -2.25, -2, -1, 0, 0.5, 1], itnum=range(10))
      ## With TMB, but re-extracting signatures
      # expand("../data/assessing_models_simulation/inference_results/TMB_with_sigextract/nlminb/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # datasetgeneration=[ 'GenerationMixtureSimulationv6'],\
      # model=['diagREDMsigextraction1', 'diagREDMsigextraction2', 'diagREDMsigextraction3'],\
      # fixed_beta_intercept = 'NA', fixed_beta_slope = 'NA',\
      # sdRE_input = 'NA', n = ['100'], nlambda = 'NA', lmbda = ['NA'],\
      # d = 'NA', beta_intensity=[-8, -7, -6, -5,  -3.75, -3.5, -3.25, -3, -2.75, -2.5, -2.25, -2, -1, 0, 0.5, 1], itnum=range(10))
      ## mixture using two cancer types      
      # expand("../data/assessing_models_simulation/datasets/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # expand("../data/assessing_models_simulation/inference_results/TCSM/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # datasetgeneration=['GenerationMixtureSimulationTwoCT'],\
      # model=['TCSM'],\
      # fixed_beta_intercept = 'NA', fixed_beta_slope = 'NA',\
      # sdRE_input = 'NA', n = ['100'], nlambda = ['50', '1773'], lmbda = ['NA'],\
      # d = 'NA', beta_intensity=[-8, -7, -6, -5,  -3.75, -3.5, -3.25, -3, -2.75, -2.5, -2.25, -2, -1, 0, 0.5, 1], itnum=range(10))
      # expand(['/Users/morril01/Documents/PhD/GlobalDA/data/restricted/pcawg/annovar_annotation/'+x.strip('.gz')+'.annovar' for x in listdir('/Users/morril01/Documents/PhD/GlobalDA/data/restricted/pcawg/pcawg_restricted_snv/') if re.search('.gz$', x)])
      ##---------------------
      ## run simulations to compare with TrackSig
      # expand("../data/assessing_models_simulation/datasets/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      #  datasetgeneration='GenerationMixturewithCCFa', n=51, itnum=range(5), fixed_beta_intercept='NA', fixed_beta_slope='NA', sdRE_input='NA', beta_intensity=4, nlambda='NA', lmbda=[100, 250, 500], d=96)
      # [expand("../data/assessing_models_simulation/inference_results/TMB/{optimiser}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # datasetgeneration=['GenerationMixturewithCCFa'],\
      # model=['diagREDM'], optimiser = 'nlminb', \
      # fixed_beta_intercept = 'NA', fixed_beta_slope = 'NA',\
      # sdRE_input = 'NA',  nlambda = 'NA', lmbda = [100, 250, 500],\
      # d = 96, n = ['51'],\
      # beta_intensity=[0, 0.1, 0.2, 1, 2, 4],\
      # itnum=range(5)),
      # expand("../data/assessing_models_simulation/inference_results/TMBregressionCCF/{optimiser}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # datasetgeneration=['GenerationMixturewithCCFa'],\
      # model=['fullREM'], optimiser = 'nlminb', \
      # fixed_beta_intercept = 'NA', fixed_beta_slope = 'NA',\
      # sdRE_input = 'NA',  nlambda = 'NA', lmbda = [100, 250, 500],\
      # d = 96, n = ['51'],\
      # beta_intensity=[0, 0.1, 0.2, 1, 2, 4],\
      # itnum=range(5)),
      # expand("../data/assessing_models_simulation/inference_results/TrackSig/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # datasetgeneration=['GenerationMixturewithCCFa'],\
      # model=['SigFreq'], \
      # fixed_beta_intercept = 'NA', fixed_beta_slope = 'NA',\
      # sdRE_input = 'NA',  nlambda = 'NA', lmbda = [100, 250, 500],\
      # d = 96, n = ['51'],\
      # beta_intensity=[0, 0.1, 0.2, 1, 2, 4],\
      # itnum=range(5)),
      # # same as above, with another cancer type
      # expand("../data/assessing_models_simulation/inference_results/TMB/{optimiser}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # datasetgeneration=['GenerationMixturewithCCFb'],\
      # model=['diagREDM'], optimiser = 'nlminb', \
      # fixed_beta_intercept = 'NA', fixed_beta_slope = 'NA',\
      # sdRE_input = 'NA',  nlambda = 'NA', lmbda = [100, 250, 500],\
      # d = 96, n = ['68'],\
      # beta_intensity=[0, 0.05, 0.1, 0.2, 1, 2, 4],\
      # itnum=range(5)),
      # expand("../data/assessing_models_simulation/inference_results/TMBregressionCCF/{optimiser}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      # datasetgeneration=['GenerationMixturewithCCFb'],\
      # model=['fullREM'], optimiser = 'nlminb', \
      # fixed_beta_intercept = 'NA', fixed_beta_slope = 'NA',\
      # sdRE_input = 'NA',  nlambda = 'NA', lmbda = [100, 250, 500],\
      # d = 96, n = ['68'],\
      # beta_intensity=[0, 0.05, 0.1, 0.2, 1, 2, 4],\
      # itnum=range(5)),
      expand("../data/assessing_models_simulation/inference_results/TrackSig/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
      datasetgeneration=['GenerationMixturewithCCFb'],\
      model=['SigFreq'], \
      fixed_beta_intercept = 'NA', fixed_beta_slope = 'NA',\
      sdRE_input = 'NA',  nlambda = 'NA', lmbda = [100, 250, 500],\
      d = 96, n = ['68'],\
      beta_intensity=[0, 0.05, 0.1, 0.2, 1, 2, 4],\
      itnum=range(5))


numreplicates_for_bias = 1000 ## for bias analysis
# numreplicates_for_bias = 200 ## for baseline comparisons

#-----------------------------------------------------------------------------------------------------------------#
rule index_vcf:
    input:
        "../data/restricted/pcawg/pcawg_restricted_snv/{sample}.consensus.20160830.somatic.snv_mnv.vcf.gz"
    output:
        "../data/restricted/pcawg/pcawg_restricted_snv/{sample}.consensus.20160830.somatic.snv_mnv.vcf.gz.tbi"
    shell:
        "tabix -f {input}"

rule make_roo_files:
    input:
        lambda wildcards: expand("{sample_from_group}",
        sample_from_group=grouped_samples[wildcards.cancer_type].split())
    output:
         "../data/roo/{cancer_type}_{feature_type}_ROO.RDS"
    params:
       ct="{cancer_type}",
       f="{feature_type}"
    shell:
        "Rscript 1_create_ROO/create_ROO_split.R --input_files '{input}' --cancer_type {params.ct} --feature_type {params.f} --output {output}"

rule make_roo_filesMSE:
    input:
        '../data/restricted/pcawg/pcawg.wg11.final_sample_list_MARCH2019.txt'
    output:
         "../data/roo/{cancer_type}_signaturesMSE_ROO2.RDS"
    params:
       ct="{cancer_type}",
    shell:
        "Rscript 1_create_ROO/sigextractB_extract_mutations_mutSigExtractor.R --input_files {input} --cancer_type {params.ct} --output {output}"
#-----------------------------------------------------------------------------------------------------------------#

#-----------------------------------------------------------------------------------------------------------------#
rule simulate_for_comparison_multiple:
    input:
        "../data/assessing_models_simulation/{datasetgeneration}"
    params:
        datasetgeneration = "{datasetgeneration}",
        n = "{n}",
        nlambda = "{nlambda}",
        lmbda = "{lmbda}",
        d = "{d}",
        beta_intensity = "{beta_intensity}",
        itnum = "{itnum}",
        fixed_beta_intercept="{fixed_beta_intercept}",
        fixed_beta_slope="{fixed_beta_slope}",
        sdRE_input="{sdRE_input}",
    output:
       "../data/assessing_models_simulation/datasets/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    shell:
       "Rscript --vanilla 3_analysis/2_simulation_model_assessment/1_generate_datasets_simulations/{params.datasetgeneration}.R --input {input} --d {params.d} --n {params.n} --nlambda {params.nlambda} --lambda {params.lmbda} --beta_gamma_shape {params.beta_intensity} --outfile {output} --beta_intercept_input ../data/assessing_models_simulation/additional_files/multiple_fixed_{params.fixed_beta_intercept}.RDS --beta_slope_input ../data/assessing_models_simulation/additional_files/multiple_fixed_{params.fixed_beta_slope}.RDS --sdRE_input ../data/assessing_models_simulation/additional_files/multiple_fixed_{params.sdRE_input}.RDS"
#-----------------------------------------------------------------------------------------------------------------#

#-----------------------------------------------------------------------------------------------------------------#

rule inference_TMB:
    input:
        "../data/roo/{cancer_type}_{feature_type}_ROO.RDS"
    params:
       model="{model}",
       feature_type="{feature_type}"
    log:
        "logs/inference/TMBinference_{cancer_type}_{feature_type}_{model}.log"
    output:
        "../results/results_TMB/pcawg_robjects/tmb_results/nlminb/{model}_{cancer_type}_{feature_type}.RDS"
    shell:
        "Rscript 2_inference_TMB/run_TMB.R --input {input} --output {output} --model {params.model} --feature_type {params.feature_type} --optimiser nlminb --simulation_bool F --read_directly T --use_previous_run_startingvals T"

rule inference_simulation_TMB_multiple:
    input:
        "../data/assessing_models_simulation/datasets/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    log:
        "logs/inference/{optimiser}/simulation_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_Model{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.log"
    params:
       model="{model}",
       optimiser="{optimiser}"
    output:
       "../data/assessing_models_simulation/inference_results/TMB/{optimiser}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    shell:
       "Rscript 2_inference_TMB/run_TMB.R --input {input} --output {output} --model {params.model} --optimiser {params.optimiser}  --use_previous_run_startingvals T"

rule inference_simulation_TMB_multiple_LRT:
    input:
        "../data/assessing_models_simulation/datasets/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    log:
        "logs/inference/{optimiser}/simulation_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_Model{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.log"
    params:
       model="{model}",
       optimiser="{optimiser}"
    output:
       "../data/assessing_models_simulation/inference_results/TMB_LRT/{optimiser}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    shell:
       "Rscript 2_inference_TMB/run_TMB.R --return_opt_bool T --input {input} --output {output} --model {params.model} --optimiser {params.optimiser}  --use_previous_run_startingvals T"

rule inference_simulation_TMB_multiple_regression:
    input:
        "../data/assessing_models_simulation/datasets/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    log:
        "logs/inference/{optimiser}/simulation_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_Model{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.log"
    params:
       model="{model}",
       optimiser="{optimiser}"
    output:
       "../data/assessing_models_simulation/inference_results/TMBregressionCCF/{optimiser}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    shell:
       "Rscript 2_inference_TMB/run_TMB_regressionccf.R --input {input} --output {output} --model {params.model} --optimiser {params.optimiser}  --use_previous_run_startingvals T"

#-----------------------------------------------------------------------------------------------------------------#


#-----------------------------------------------------------------------------------------------------------------#
rule analyse_simulation_TMB_bias:
    input:
      lambda wildcards: expand("../data/assessing_models_simulation/inference_results/TMB/nlminb/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
        n = wildcards.n,
        nlambda = wildcards.nlambda,
        lmbda = wildcards.lmbda,
        d = wildcards.d,
        beta_intensity = wildcards.beta_intensity,
        datasetgeneration=wildcards.datasetgeneration,
        fixed_beta_intercept = wildcards.fixed_beta_intercept,
        fixed_beta_slope = wildcards.fixed_beta_slope,
        sdRE_input = wildcards.sdRE_input,
        model = "{model}",
        itnum= range(numreplicates_for_bias))
    output:
        "../results/results_TMB/simulated_datasets/bias_and_coverage/multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf"
    shell:
        "Rscript 3_analysis/2_simulation_model_assessment/2_analyse_inference_simulations/analyse_bias_and_coverage.R --input_list '{input}' \
        --dataset_generation {wildcards.datasetgeneration} --model {wildcards.model}\
        --multiple_runs T --run_nonconverged F --beta_intercept_input {wildcards.fixed_beta_intercept} \
        --beta_slope_input {wildcards.fixed_beta_slope} --sdRE_input {wildcards.sdRE_input}  --d {wildcards.d} --n {wildcards.n} --nlambda {wildcards.nlambda} --lambda {wildcards.lmbda} --beta_gamma_shape {wildcards.beta_intensity} "
#-----------------------------------------------------------------------------------------------------------------#

#-----------------------------------------------------------------------------------------------------------------#

rule unzip:
    input:
        "/Users/morril01/Documents/PhD/GlobalDA/data/restricted/pcawg/pcawg_restricted_snv/{sample}.gz"
    output:
        "/Users/morril01/Documents/PhD/GlobalDA/data/restricted/pcawg/pcawg_restricted_snv/{sample}"
    shell:
        "gzip -d {input}; "

rule annotate_vcf:
    input:
        "/Users/morril01/Documents/PhD/GlobalDA/data/restricted/pcawg/pcawg_restricted_snv/{sample}"
    output:
        "/Users/morril01/Documents/PhD/GlobalDA/data/restricted/pcawg/annovar_annotation/{sample}.annovar"
    params:
    shell:
        "/Users/morril01/software/annovar/./table_annovar.pl {input} \
        /Users/morril01/software/annovar/humandb/ -buildver hg19 -out {output} -remove -protocol icgc28 -operation f -nastring . -csvout -polish \
        -xref /Users/morril01/software/annovar/example/gene_xref.txt; gzip {input}; mv {output}.hg19_multianno.csv {output}"
#-----------------------------------------------------------------------------------------------------------------#

#-----------------------------------------------------------------------------------------------------------------#
rule inference_simulation_HiLDA_multiple:
    input:
        "../data/assessing_models_simulation/datasets/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    log:
        "logs/inference/HiLDA/simulation_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_Model{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.log"
    params:
       model="{model}",
    output:
       "../data/assessing_models_simulation/inference_results/HiLDA/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    shell:
       "Rscript 3_analysis/2_simulation_model_assessment/3_Comparison_other_models/1_run_alternative_models.R --input {input} --output {output} --model {params.model}"
#-----------------------------------------------------------------------------------------------------------------#

#-----------------------------------------------------------------------------------------------------------------#
## TCSM
## Create input files for TCSM
rule inference_simulation_TCSM_multiple_1:
    input:
        "../data/assessing_models_simulation/datasets/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    log:
        "logs/inference/TCSM/simulation_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_Model{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.log"
    params:
        model="{model}",
    output:
        "../data/assessing_models_simulation/inference_results/TCSM/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/mutationcount{itnum}TEMP"
    shell:
        "Rscript 3_analysis/2_simulation_model_assessment/3_Comparison_other_models/1_run_alternative_models.R --input {input} --output {output} --model {params.model}"

## Run TCSM
## for running this rule, activate the conda environment: `conda activate tcsm`
## and you need to specify cores; `snakemake -p --cores 1`
## moreover, the following packages need to be installed in the tcsm conda environment:
## - r-optparse `conda install r-optparse`
## - r-uuid `conda install conda-forge::r-uuid`
## - HiLDA is not installed in this environment so make sure that the rule simulate_for_comparison_multiple is run before
rule inference_simulation_TCSM_multiple_2:
    input:
        "../data/assessing_models_simulation/inference_results/TCSM/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/mutationcount{itnum}TEMP"
    log:
        "logs/inference/TCSM/simulation_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_Model{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.log"
    params:
       model="{model}",
       d = lambda wildcards: d_list[wildcards.datasetgeneration],
    output:
       "../data/assessing_models_simulation/inference_results/TCSM/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/exposures{itnum}TEMP"
    conda:
        "tcsm"
    benchmark: ## timing
       "../data/assessing_models_simulation/inference_results/TCSM/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.time"
    shell:
       path_to_TCSM + "/src/./run_tcsm.R  ../data/assessing_models_simulation/inference_results/TCSM/multiple_{wildcards.datasetgeneration}_{wildcards.n}_{wildcards.nlambda}_{wildcards.lmbda}_{wildcards.d}_{wildcards.beta_intensity}_{wildcards.model}_{wildcards.fixed_beta_intercept}_{wildcards.fixed_beta_slope}_{wildcards.sdRE_input}/mutationcount{wildcards.itnum}TEMP"+\
       "  {params.d} -c=../data/assessing_models_simulation/inference_results/TCSM/multiple_{wildcards.datasetgeneration}_{wildcards.n}_{wildcards.nlambda}_{wildcards.lmbda}_{wildcards.d}_{wildcards.beta_intensity}_{wildcards.model}_{wildcards.fixed_beta_intercept}_{wildcards.fixed_beta_slope}_{wildcards.sdRE_input}/covariate{wildcards.itnum}TEMP"+\
       " --covariates group"+\
       " --exposures=../data/assessing_models_simulation/inference_results/TCSM/multiple_{wildcards.datasetgeneration}_{wildcards.n}_{wildcards.nlambda}_{wildcards.lmbda}_{wildcards.d}_{wildcards.beta_intensity}_{wildcards.model}_{wildcards.fixed_beta_intercept}_{wildcards.fixed_beta_slope}_{wildcards.sdRE_input}/exposures{wildcards.itnum}TEMP "+\
       " --signatures=../data/assessing_models_simulation/inference_results/TCSM/multiple_{wildcards.datasetgeneration}_{wildcards.n}_{wildcards.nlambda}_{wildcards.lmbda}_{wildcards.d}_{wildcards.beta_intensity}_{wildcards.model}_{wildcards.fixed_beta_intercept}_{wildcards.fixed_beta_slope}_{wildcards.sdRE_input}/signatures{wildcards.itnum}TEMP "+\
       " --effect=../data/assessing_models_simulation/inference_results/TCSM/multiple_{wildcards.datasetgeneration}_{wildcards.n}_{wildcards.nlambda}_{wildcards.lmbda}_{wildcards.d}_{wildcards.beta_intensity}_{wildcards.model}_{wildcards.fixed_beta_intercept}_{wildcards.fixed_beta_slope}_{wildcards.sdRE_input}/effect{wildcards.itnum}TEMP "+\
       " --sigma=../data/assessing_models_simulation/inference_results/TCSM/multiple_{wildcards.datasetgeneration}_{wildcards.n}_{wildcards.nlambda}_{wildcards.lmbda}_{wildcards.d}_{wildcards.beta_intensity}_{wildcards.model}_{wildcards.fixed_beta_intercept}_{wildcards.fixed_beta_slope}_{wildcards.sdRE_input}/sigma{wildcards.itnum}TEMP "+\
       " --gamma=../data/assessing_models_simulation/inference_results/TCSM/multiple_{wildcards.datasetgeneration}_{wildcards.n}_{wildcards.nlambda}_{wildcards.lmbda}_{wildcards.d}_{wildcards.beta_intensity}_{wildcards.model}_{wildcards.fixed_beta_intercept}_{wildcards.fixed_beta_slope}_{wildcards.sdRE_input}/gamma{wildcards.itnum}TEMP "

## get the significance of the change (by simulation). Time this as well!
rule inference_simulation_TCSM_multiple_3:
    input: ## even though this file in particular is not taken as input, but it is created at the same time as all the inputs, in rule inference_simulation_TCSM_multiple_2
           "../data/assessing_models_simulation/inference_results/TCSM/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/exposures{itnum}TEMP"
    output:
       "../data/assessing_models_simulation/inference_results/TCSM/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/EstSignificance{itnum}TEMP"
    benchmark: ## timing
       "../data/assessing_models_simulation/inference_results/TCSM/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.time2"
    shell:
       "python3 3_analysis/2_simulation_model_assessment/3_Comparison_other_models/2_TCSM_estimate_significance.py " +\
         #../data/assessing_models_simulation/inference_results/TCSM/multiple_{wildcards.datasetgeneration}_{wildcards.n}_{wildcards.nlambda}_{wildcards.lmbda}_{wildcards.d}_{wildcards.beta_intensity}_{wildcards.model}_{wildcards.fixed_beta_intercept}_{wildcards.fixed_beta_slope}_{wildcards.sdRE_input}/mutationcount{wildcards.itnum}TEMP"+\
       " --covariates group --covariate_of_interest group"+\
       # " --signatures=../data/assessing_models_simulation/inference_results/TCSM/multiple_{wildcards.datasetgeneration}_{wildcards.n}_{wildcards.nlambda}_{wildcards.lmbda}_{wildcards.d}_{wildcards.beta_intensity}_{wildcards.model}_{wildcards.fixed_beta_intercept}_{wildcards.fixed_beta_slope}_{wildcards.sdRE_input}/signatures{wildcards.itnum}TEMP "+\
       # " --effect=../data/assessing_models_simulation/inference_results/TCSM/multiple_{wildcards.datasetgeneration}_{wildcards.n}_{wildcards.nlambda}_{wildcards.lmbda}_{wildcards.d}_{wildcards.beta_intensity}_{wildcards.model}_{wildcards.fixed_beta_intercept}_{wildcards.fixed_beta_slope}_{wildcards.sdRE_input}/effect{wildcards.itnum}TEMP "+\
       " --sigma=../data/assessing_models_simulation/inference_results/TCSM/multiple_{wildcards.datasetgeneration}_{wildcards.n}_{wildcards.nlambda}_{wildcards.lmbda}_{wildcards.d}_{wildcards.beta_intensity}_{wildcards.model}_{wildcards.fixed_beta_intercept}_{wildcards.fixed_beta_slope}_{wildcards.sdRE_input}/sigma{wildcards.itnum}TEMP "+\
       " --gamma=../data/assessing_models_simulation/inference_results/TCSM/multiple_{wildcards.datasetgeneration}_{wildcards.n}_{wildcards.nlambda}_{wildcards.lmbda}_{wildcards.d}_{wildcards.beta_intensity}_{wildcards.model}_{wildcards.fixed_beta_intercept}_{wildcards.fixed_beta_slope}_{wildcards.sdRE_input}/gamma{wildcards.itnum}TEMP "+\
       " --output {output}"


## Remove files from TCSM, and rename output file
## Assemble results in a single file
rule inference_simulation_TCSM_multiple_4:
    input:
     "../data/assessing_models_simulation/inference_results/TCSM/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/EstSignificance{itnum}TEMP"
    output:
       "../data/assessing_models_simulation/inference_results/TCSM/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    shell:
       "Rscript 3_analysis/2_simulation_model_assessment/3_Comparison_other_models/3_delete_temp_TCSM_files.R "+\
       " --filestring ../data/assessing_models_simulation/inference_results/TCSM/multiple_{wildcards.datasetgeneration}_{wildcards.n}_{wildcards.nlambda}_{wildcards.lmbda}_{wildcards.d}_{wildcards.beta_intensity}_{wildcards.model}_{wildcards.fixed_beta_intercept}_{wildcards.fixed_beta_slope}_{wildcards.sdRE_input}/"+\
       " --it {wildcards.itnum} --input {input} --output {output}"
#-----------------------------------------------------------------------------------------------------------------#

#-----------------------------------------------------------------------------------------------------------------#
rule inference_simulation_TrackSig:
    input:
        "../data/assessing_models_simulation/datasets/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    log:
        "logs/inference/TrackSig/simulation_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_Model{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.log"
    params:
       model="{model}",
       datasetgeneration = "{datasetgeneration}"
    output:
       "../data/assessing_models_simulation/inference_results/TrackSig/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    shell:
       "Rscript 3_analysis/2_simulation_model_assessment/3_Comparison_other_models/6_run_TrackSig.R --input {input} --output {output} --model {params.model} --datasetgeneration {params.datasetgeneration}"
#-----------------------------------------------------------------------------------------------------------------#


#-----------------------------------------------------------------------------------------------------------------#
rule inference_simulation_TMB_sigreextraction_multiple:
    input:
        "../data/assessing_models_simulation/datasets/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    log:
        "logs/inference/TMB_with_sigextract/simulation_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_Model{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.log"
    params:
       model="{model}",
    output:
       "../data/assessing_models_simulation/inference_results/TMB_with_sigextract/nlminb/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    shell:
       "Rscript 3_analysis/2_simulation_model_assessment/3_Comparison_other_models/1_run_alternative_models.R --input {input} --output {output} --model {params.model}"
#-----------------------------------------------------------------------------------------------------------------#

