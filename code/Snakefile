import numpy as np
from os import listdir
import uuid

configfile: "config_PCAWG_do_not_modify.yaml"
cancer_types = config["sample_groups"]
# cancer_type = "Cervix-SCC"
grouped_samples = config["grouped_samples"]

samples_list = dict(zip(cancer_types, [grouped_samples[ct].split() for ct in cancer_types]))
num_iterations = 15000
# num_iterations = 2000

list_basic_params_sim = ['simulation_n_', 'simulation_lambda_', 'simulation_nlambda_', 'simulation_d_', 'beta_gamma_shape_']

# list_models = ['fullREM', 'diagREDM', 'singleREDM', 'fullREDMsinglelambda']
list_models = ['fullREM', 'diagREDM', 'fullREDMsinglelambda', 'diagREDMsinglelambda']

## for some datasets, copy the parameter sets of another dataset
for parameter_names_it in list_basic_params_sim:
      config[parameter_names_it+'GenerationJnormChangingNmBTwoLambdasOneChangingBeta'] = config[parameter_names_it+'GenerationJnormBTwoLambdasOneChangingBeta']
config['simulation_nlambda_GenerationJnormChangingNmBTwoLambdasOneChangingBeta'] = [40,60,80,120,140,160]


## which parameters n, d, etc. do we use for each dataset?
datasetgeneration2_dict = {'GenerationC': 'generationC', 'GenerationCnorm': 'generationC',\
 'GenerationCnormsimpler': 'generationC', 'generationFnorm': 'generationF', 'generationGnorm': 'generationG',\
 'generationMGnorm': 'generationG', 'GenerationHnorm': 'generationHnorm', 'GenerationInoRE': 'generationC',\
 'GenerationJnorm' : 'generationC',  'GenerationJnorm2' : 'generationC',  'GenerationJnorm3' : 'generationC',\
 'GenerationInoREscaledbeta': 'generationC', 'GenerationK': 'generationG', 'GenerationK2': 'generationG',\
 'GenerationJnormTwoLambdas': 'generationG', 'GenerationInoREtwolambdas': 'generationG',\
 'generationHnormtwolambdas': 'generationG', 'GenerationMixture1': 'generationMixture1',\
 'GenerationJnormTwoLambdasOneChangingBeta': 'generationG',\
 'GenerationJnormBTwoLambdasOneChangingBeta': 'GenerationJnormBTwoLambdasOneChangingBeta',\
 'GenerationPois': 'GenerationPois',\
 'GenerationMixturePCAWG': 'GenerationMixturePCAWG', 'GenerationMixturefewersignaturesPCAWG': 'GenerationMixturefewersignaturesPCAWG',\
 'GenerationMixturefewersignaturespairedPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedstomachPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedKidneyRCCPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedBoneOsteosarcPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedBreastAdenoCAPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedCNSGBMPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedCNSMedulloPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedCNSPiloAstroPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedColoRectAdenoCAPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedEsoAdenoCAPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedHeadSCCPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedKidneyChRCCPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedKidneyRCCPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedKidneyRCCpapillaryPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedLiverHCC': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedLungSCCPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedLymphBNHLPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedLymphCLLPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedOvaryAdenoCAPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedPancAdenoCAPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedPancEndocrinePCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedProstAdenoCAPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedSkinMelanomacutaneousPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedStomachPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedThyAdenoCAPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedUterusAdenoCAPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersmallsignaturespairedKidneyRCCPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedObsNmBoneOsteosarcPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedObsNmBreastAdenoCAPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedObsNmCNSGBMPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedObsNmCNSMedulloPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedObsNmCNSPiloAstroPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedObsNmColoRectAdenoCAPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedObsNmEsoAdenoCAPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedObsNmHeadSCCPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedObsNmKidneyChRCCPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedObsNmKidneyRCCPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedObsNmKidneyRCCpapillaryPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedObsNmLiverHCC': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedObsNmLungSCCPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedObsNmLymphBNHLPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedObsNmLymphCLLPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedObsNmOvaryAdenoCAPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedObsNmPancAdenoCAPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedObsNmPancEndocrinePCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedObsNmProstAdenoCAPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedObsNmSkinMelanomacutaneousPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedObsNmStomachPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG', 'GenerationMixturefewersignaturespairedObsNmThyAdenoCAPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationMixturefewersignaturespairedObsNmUterusAdenoCAPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG',\
 'GenerationJnormChangingNmBTwoLambdasOneChangingBeta': 'GenerationJnormChangingNmBTwoLambdasOneChangingBeta',\
 'GenerationMixturefewersignaturespairedTMBcorBoneOsteosarcPCAWG': 'GenerationMixturefewersignaturespairedstomachPCAWG' }

for j in ['CNSGBMPCAWG', 'CNSMedulloPCAWG', 'CNSPiloAstroPCAWG',\
      'ColoRectAdenoCAPCAWG', 'EsoAdenoCAPCAWG', 'HeadSCCPCAWG', 'KidneyChRCCPCAWG', 'KidneyRCCpapillaryPCAWG',\
      'LungSCCPCAWG', 'LymphBNHLPCAWG', 'LymphCLLPCAWG', 'OvaryAdenoCAPCAWG', 'PancAdenoCAPCAWG', 'PancEndocrinePCAWG',\
      'ProstAdenoCAPCAWG', 'SkinMelanomacutaneousPCAWG', 'ThyAdenoCAPCAWG', 'UterusAdenoCAPCAWG']:
      datasetgeneration2_dict['GenerationMixturefewersignaturespairedObsNm'+j] = 'GenerationMixturefewersignaturespairedstomachPCAWG'
      datasetgeneration2_dict['GenerationMixtureallsignaturespairedObsNm'+j] = 'GenerationMixturefewersignaturespairedstomachPCAWG'
      datasetgeneration2_dict['GenerationMixturefewersignaturespairedObsNmObsDM'+j] = 'GenerationMixturefewersignaturespairedstomachPCAWG'
      datasetgeneration2_dict['GenerationMixturefewersignaturespairedObsNmGaussianPCAWG'+j] = 'GenerationMixturePCAWG2'
      datasetgeneration2_dict['GenerationMixturefewersignaturespairedObsNmGaussianVarPCAWG'+j] = 'GenerationMixturePCAWG2'
      datasetgeneration2_dict['GenerationMixturefewersignaturespairedObsNmPoissonUnifPCAWG'+j] = 'GenerationMixturePCAWG2'
      datasetgeneration2_dict['GenerationMixturefewersignaturespairedObsNmPoissonSigPCAWG'+j] = 'GenerationMixturePCAWG2'
      datasetgeneration2_dict['GenerationMixturefewersignaturespairedObsNmInvPCAWG'+j] = 'GenerationMixturePCAWG2'
      datasetgeneration2_dict['GenerationMixturefewersignaturespairedTMBcorBoneOsteosarcPCAWG'+j] = 'GenerationMixturePCAWG2'


numreplicates = {'GenerationJnorm': 1, 'GenerationJnorm2': 4, 'GenerationJnorm3': 4, 'GenerationMixture1': 2,\
'GenerationK': 1,\
'GenerationJnormTwoLambdasOneChangingBeta': 2, 'GenerationJnormBTwoLambdasOneChangingBeta': 6, 'GenerationMixturePCAWG': 1,\
'GenerationPois': 6,\
'GenerationMixturefewersignaturesPCAWG': 20, 'GenerationMixturefewersignaturespairedPCAWG': 20,\
'GenerationMixturefewersignaturespairedstomachPCAWG': 20, 'GenerationMixturefewersignaturespairedKidneyRCCPCAWG': 20,\
'GenerationMixturefewersignaturespairedBoneOsteosarcPCAWG': 20, 'GenerationMixturefewersignaturespairedBreastAdenoCAPCAWG': 20,\
'GenerationMixturefewersignaturespairedCNSGBMPCAWG': 20, 'GenerationMixturefewersignaturespairedCNSMedulloPCAWG': 20,\
'GenerationMixturefewersignaturespairedCNSPiloAstroPCAWG': 20, 'GenerationMixturefewersignaturespairedColoRectAdenoCAPCAWG': 20,\
'GenerationMixturefewersignaturespairedEsoAdenoCAPCAWG': 20, 'GenerationMixturefewersignaturespairedHeadSCCPCAWG': 20,\
'GenerationMixturefewersignaturespairedKidneyChRCCPCAWG': 20, 'GenerationMixturefewersignaturespairedKidneyRCCPCAWG': 20,\
'GenerationMixturefewersignaturespairedKidneyRCCpapillaryPCAWG': 20, 'GenerationMixturefewersignaturespairedLiverHCC': 20,\
'GenerationMixturefewersignaturespairedLungSCCPCAWG': 20, 'GenerationMixturefewersignaturespairedLymphBNHLPCAWG': 20,\
'GenerationMixturefewersignaturespairedLymphCLLPCAWG': 20, 'GenerationMixturefewersignaturespairedOvaryAdenoCAPCAWG': 20,\
'GenerationMixturefewersignaturespairedPancAdenoCAPCAWG': 20, 'GenerationMixturefewersignaturespairedPancEndocrinePCAWG': 20,\
'GenerationMixturefewersignaturespairedProstAdenoCAPCAWG': 20, 'GenerationMixturefewersignaturespairedSkinMelanomacutaneousPCAWG': 20,\
'GenerationMixturefewersignaturespairedStomachPCAWG': 20, 'GenerationMixturefewersignaturespairedThyAdenoCAPCAWG': 20,\
'GenerationMixturefewersignaturespairedUterusAdenoCAPCAWG': 20, 'GenerationMixturefewersmallsignaturespairedKidneyRCCPCAWG': 20,\
'GenerationMixturefewersignaturespairedObsNmBoneOsteosarcPCAWG': 3, 'GenerationJnormChangingNmBTwoLambdasOneChangingBeta': 10,\
'GenerationMixturefewersignaturespairedTMBcorBoneOsteosarcPCAWG': 3}

##--------------------GenerationMixturefewersignaturespairedObsNm--------------------##
for j in ['CNSGBMPCAWG', 'CNSMedulloPCAWG', 'CNSPiloAstroPCAWG',\
      'ColoRectAdenoCAPCAWG', 'EsoAdenoCAPCAWG', 'HeadSCCPCAWG', 'KidneyChRCCPCAWG', 'KidneyRCCpapillaryPCAWG',\
      'LungSCCPCAWG', 'LymphBNHLPCAWG', 'LymphCLLPCAWG', 'OvaryAdenoCAPCAWG', 'PancAdenoCAPCAWG', 'PancEndocrinePCAWG',\
      'ProstAdenoCAPCAWG', 'SkinMelanomacutaneousPCAWG', 'ThyAdenoCAPCAWG', 'UterusAdenoCAPCAWG']:
      numreplicates['GenerationMixturefewersignaturespairedObsNm'+j] = 10

for j in ['PancEndocrinePCAWG', 'UterusAdenoCAPCAWG']:
      numreplicates['GenerationMixturefewersignaturespairedObsNm'+j] = 3
##------------------- GenerationMixturefewersignaturespairedObsNm -------------------##

##--------------------GenerationMixtureallsignaturespairedObsNm--------------------##
for j in ['CNSGBMPCAWG', 'CNSMedulloPCAWG', 'CNSPiloAstroPCAWG',\
      'ColoRectAdenoCAPCAWG', 'EsoAdenoCAPCAWG', 'HeadSCCPCAWG', 'KidneyChRCCPCAWG', 'KidneyRCCpapillaryPCAWG',\
      'LungSCCPCAWG', 'LymphBNHLPCAWG', 'LymphCLLPCAWG', 'OvaryAdenoCAPCAWG', 'PancAdenoCAPCAWG', 'PancEndocrinePCAWG',\
      'ProstAdenoCAPCAWG', 'SkinMelanomacutaneousPCAWG', 'ThyAdenoCAPCAWG', 'UterusAdenoCAPCAWG']:
      numreplicates['GenerationMixtureallsignaturespairedObsNm'+j] = 3
##------------------- GenerationMixtureallsignaturespairedObsNm -------------------##

##--------------------GenerationMixtureallsignaturespairedObsNmObsDM--------------------##
for j in ['CNSGBMPCAWG', 'CNSMedulloPCAWG', 'CNSPiloAstroPCAWG',\
      'ColoRectAdenoCAPCAWG', 'EsoAdenoCAPCAWG', 'HeadSCCPCAWG', 'KidneyChRCCPCAWG', 'KidneyRCCpapillaryPCAWG',\
      'LungSCCPCAWG', 'LymphBNHLPCAWG', 'LymphCLLPCAWG', 'OvaryAdenoCAPCAWG', 'PancAdenoCAPCAWG', 'PancEndocrinePCAWG',\
      'ProstAdenoCAPCAWG', 'SkinMelanomacutaneousPCAWG', 'ThyAdenoCAPCAWG', 'UterusAdenoCAPCAWG']:
      numreplicates['GenerationMixturefewersignaturespairedObsNmObsDM'+j] = 3 #20
      numreplicates['GenerationMixturefewersignaturespairedObsNmGaussianPCAWG'+j] = 3
      numreplicates['GenerationMixturefewersignaturespairedObsNmPoissonUnifPCAWG'+j] = 3
      numreplicates['GenerationMixturefewersignaturespairedObsNmPoissonSigPCAWG'+j] = 3 #20
      numreplicates['GenerationMixturefewersignaturespairedObsNmGaussianVarPCAWG'+j] = 20
      numreplicates['GenerationMixturefewersignaturespairedObsNmInvPCAWG'+j] = 20

##------------------- GenerationMixtureallsignaturespairedObsNmObsDM -------------------##


config['simulation_n_generationMGnorm'] = 200


## unzip

def remove_end(i):
    return i[:-3]


rule all:
    input:
      # expand("../data/restricted/pcawg/pcawg_restricted_snv/{sample}.consensus.20160830.somatic.snv_mnv.vcf.gz.tbi", sample=config["samples"]),
      # expand("../data/restricted/pcawg/pcawg_restricted_snv_counts/{sample}", sample=config["samples"]),
      # expand("../data/roo/{cancer_type}_{feature_type}_ROO.RDS", feature_type=config["feature_types"], cancer_type=cancer_types),
      # expand("../data/roo/{cancer_type}_{feature_type}_ROO.RDS", feature_type="signaturesmutSigExtractor", cancer_type=cancer_types),
      # expand("../data/roo/{cancer_type}_{feature_type}_ROO.RDS", feature_type="signaturesPCAWG", cancer_type=cancer_types)
      # expand("../data/roo/{cancer_type}_signaturesMSE_ROO2.RDS", cancer_type=[x for x in cancer_types if not any(y in x for y in ['Myeloid-AML','Breast-DCIS', 'Melanoma.mucosal'])]) ## mutsigextractor on pcawg signatures
      # --------------------------------------------------------------------------------------------------------- #
      #expand("../data/assessing_models_simulation/summaries_synthetic_DA/{datasetgeneration}.RDS",\
      # datasetgeneration=[ 'GenerationJnorm'])
      # expand("../data/assessing_models_simulation/summaries_synthetic_DA/{datasetgeneration}.RDS",\
      # datasetgeneration=[ 'GenerationJnormBTwoLambdasOneChangingBeta'])
      # expand("../data/assessing_models_simulation/summaries_synthetic_DA/{datasetgeneration}.RDS",\
      # datasetgeneration=[ 'GenerationJnormChangingNmBTwoLambdasOneChangingBeta'])
      # expand("../results/results_TMB/simulated_datasets/mixed_effects_models_multiple/{datasetgeneration}/{datasetgeneration}_{model}/{datasetgeneration}_{model}_results_info.txt",\
      # datasetgeneration=['GenerationMixture1'], model=['fullREM', 'diagREDM', 'fullREDMsinglelambda', 'diagREDMsinglelambda'])      # expand("../results/results_TMB/simulated_datasets/mixed_effects_models_multiple/{datasetgeneration}/{datasetgeneration}_{model}/{datasetgeneration}_{model}_results_info.txt",\
      # datasetgeneration=['GenerationK', 'GenerationK2', 'GenerationJnormTwoLambdas', 'GenerationInoREtwolambdas', 'generationHnormtwolambdas'], model=['fullREM', 'diagREDM', 'fullREDMsinglelambda', 'diagREDMsinglelambda'])
      #expand("../data/assessing_models_simulation/summaries_synthetic_DA/{datasetgeneration}.RDS",\
      # datasetgeneration=[ 'GenerationJnorm', 'GenerationJnorm2', 'GenerationJnorm3'])
      #expand("../data/assessing_models_simulation/summaries_synthetic_DA/{datasetgeneration}.RDS",\
      # expand("../data/assessing_models_simulation/summaries_synthetic_DA/{datasetgeneration}.RDS",\
      # datasetgeneration=[ 'GenerationJnorm', 'GenerationJnorm2', 'GenerationJnorm3'])
      # expand("../data/assessing_models_simulation/summaries_synthetic_DA/{datasetgeneration}.RDS",\
      # datasetgeneration=[ 'GenerationJnorm'])
      # expand("../results/results_TMB/simulated_datasets/mixed_effects_models_multiple/{datasetgeneration}/{datasetgeneration}_{model}/{datasetgeneration}_{model}_results_info.txt",\
      # datasetgeneration=['GenerationMixture1'], model=['fullREM', 'diagREDM', 'fullREDMsinglelambda', 'diagREDMsinglelambda'])
      # expand("../data/assessing_models_simulation/summaries_synthetic_DA/{datasetgeneration}.RDS",\
      #  datasetgeneration=[ 'GenerationCnorm', 'GenerationJnorm', 'GenerationJnorm2', 'GenerationJnorm3', 'GenerationK', 'GenerationK2', 'GenerationJnormTwoLambdas', 'GenerationInoREtwolambdas',\
      #   'generationHnormtwolambdas'])
      # expand("../data/assessing_models_simulation/summaries_synthetic_DA/{datasetgeneration}.RDS",\
      #  datasetgeneration=['GenerationMixture1'])
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      #  datasetgeneration='GenerationMGnorm', model=['fullREDM', 'diagREDM', 'singleREDM'], fixed_beta_intercept = 'betaintercept3',\
      # fixed_beta_slope = 'betaslope3', sdRE_input = 'sdRE1',  n = 200, nlambda = 180, lmbda = 100, d = 6,
      # beta_intensity=0),
      # [expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      #  datasetgeneration='GenerationMGnorm', model=['singleREDM'], fixed_beta_intercept = 'betaintercept3',\
      # fixed_beta_slope = 'betaslope3', sdRE_input = 'sdRE1',  n = 200, nlambda = 180, lmbda = 100, d = 6,
      # beta_intensity=0),
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['diagREDM', 'fullREDM'], fixed_beta_intercept = 'betaintercept1d4',\
      # fixed_beta_slope = 'betaslope1d4', sdRE_input = 'covmat1d4',  n = 200, nlambda = 180, lmbda = [2, 20, 100], d = 5,
      # beta_intensity=0)
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['singleREDM'], fixed_beta_intercept = 'betaintercept1d4',\
      # fixed_beta_slope = 'betaslope1d4', sdRE_input = 'covmat1d4',  n = 200, nlambda = 180, lmbda = [2, 20, 100], d = 5,
      # beta_intensity=0),
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['diagREDM', 'fullREDM'], fixed_beta_intercept = 'betaintercept1d3',\
      # fixed_beta_slope = 'betaslope1d3', sdRE_input = 'covmat1d3',  n = 200, nlambda = 180, lmbda = [2, 20], d = 4,
      # beta_intensity=0)
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['fullREDM'], fixed_beta_intercept = ['betaintercept1d2', 'betaintercept2d2'],\
      # fixed_beta_slope = ['betaslope1d2', 'betaslope2d2'], sdRE_input = 'covmat1d2',  n = 200, nlambda = 180, lmbda = [20], d = 3,
      # beta_intensity=0)
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['fullREDM', 'diagREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG1',\
      # fixed_beta_slope = 'betaslopePCAWG1',\
      # sdRE_input = 'covmatPCAWG1',\
      # n = 200, nlambda = 180, lmbda = [0.06], d = 8, beta_intensity=0)
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['fullREDM', 'diagREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG2',\
      # fixed_beta_slope = 'betaslopePCAWG2',\
      # sdRE_input = 'covmatPCAWG2',\
      # n = 200, nlambda = 180, lmbda = [0.06], d = 6, beta_intensity=0)
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['fullREDM', 'diagREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG2',\
      # fixed_beta_slope = 'betaslopePCAWG2',\
      # sdRE_input = 'covmatPCAWG2',\
      # n = 200, nlambda = 180, lmbda = [100], d = 6, beta_intensity=0)
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['diagREcorDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG2',\
      # fixed_beta_slope = 'betaslopePCAWG2',\
      # sdRE_input = 'covmatPCAWG2',\
      # n = 200, nlambda = 3401, lmbda = [2], d = 6, beta_intensity=0)
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['diagREDM', 'fullREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG2',\
      # fixed_beta_slope = 'betaslopePCAWG2',\
      # sdRE_input = 'covmatPCAWG2',\
      # n = 200, nlambda = 3401, lmbda = [18], d = 6, beta_intensity=0) ## using all params which were estimated: betas, cov, lambda, num muts per sample
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['diagREDM', 'fullREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG2',\
      # fixed_beta_slope = 'betaslopePCAWG2',\
      # sdRE_input = 'covmatFULLPCAWG2',\
      # n = 200, nlambda = 3401, lmbda = [28], d = 6, beta_intensity=0) ## TO RUN!! using all params, as above, but from the fullRE DM
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['diagREDM', 'fullREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG3',\
      # fixed_beta_slope = 'betaslopePCAWG3',\
      # sdRE_input = 'covmatPCAWG3',\
      # n = 208, nlambda = 1516, lmbda = [32], d = 14, beta_intensity=0) ## takes too long. killed
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['diagREDM', 'fullREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG4',\
      # fixed_beta_slope = 'betaslopePCAWG4',\
      # sdRE_input = 'covmatPCAWG4',\
      # n = 200, nlambda = 14072, lmbda = [80], d = 6, beta_intensity=0) ## good
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['diagREDM', 'fullREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG4',\
      # fixed_beta_slope = 'betaslopePCAWG4',\
      # sdRE_input = 'covmatFULLPCAWG4',\
      # n = 200, nlambda = 14072, lmbda = [87], d = 6, beta_intensity=0) ## as above but with fullRE cov mat and lambda
      # --------------------------------------------------------------------------------------------------------- #
      ## Biological-driven simulation #4, with a variable lambda
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', \
      # model=['diagREDM', 'fullREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG6',\
      # fixed_beta_slope = 'betaslopePCAWG6',\
      # sdRE_input = 'covmatFULLPCAWG6',\
      # n = 'nPCAWG6', nlambda = 'nlambdaPCAWG6',\
      # lmbda = ['lowlambdaPCAWG6', 'lambdaPCAWG6', 'highlambdaPCAWG6'],\
      # d = 'dPCAWG6', beta_intensity=0)
      ## SingleREDM
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnorm', model=['singleREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG6',\
      # fixed_beta_slope = 'betaslopePCAWG6',\
      # sdRE_input = 'covmatFULLPCAWG6',\
      # n = 'nPCAWG6', nlambda = 'nlambdaPCAWG6',\
      # lmbda = ['lambdaPCAWG6'],\
      # d = 'dPCAWG6', beta_intensity=0)
      # --------------------------------------------------------------------------------------------------------- #
      ## Biological-driven simulation #4, with a lower number of mutations   
      expand("../results/results_TMB/simulated_datasets/bias_and_coverage/multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      datasetgeneration='GenerationJnorm', model=['diagREDM', 'fullREDM'],\
      fixed_beta_intercept = 'betainterceptPCAWG6',\
      fixed_beta_slope = 'betaslopePCAWG6',\
      sdRE_input = 'covmatFULLPCAWG6',\
      n = 'nPCAWG6', \
      nlambda = ['lownlambdaPCAWG6', 'low2nlambdaPCAWG6', 'low3nlambdaPCAWG6'],\
      lmbda = ['lambdaPCAWG6'],\
      d = 'dPCAWG6', beta_intensity=0)
      # --------------------------------------------------------------------------------------------------------- #
      ## Baseline simulation
      ## Biological-driven simulation equivalent to #2
      ## (setsim_multiple_GenerationJnorm_nlminb_200_14072_80_6_0_fullREDM_betainterceptPCAWG4_betaslopePCAWG4_covmatPCAWG4_onlyconverged_coverage_beta_v3)
      ## but inverting the columns to show that the choice of baseline does not matter
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnormInv', model=['diagREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG4',\
      # fixed_beta_slope = 'betaslopePCAWG4',\
      # sdRE_input = 'covmatPCAWG4',\
      # n = 200, nlambda = 14072, lmbda = 80, d = 6, beta_intensity=0)
      ## ... or using as baseline the column with the highest abundance
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration='GenerationJnormMax', model=['diagREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG4',\
      # fixed_beta_slope = 'betaslopePCAWG4',\
      # sdRE_input = 'covmatPCAWG4',\
      # n = 200, nlambda = 14072, lmbda = 80, d = 6, beta_intensity=0)
      # expand("../results/results_TMB/simulated_datasets/bias_and_coverage/multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf",\
      # datasetgeneration=[ 'GenerationJnormMax', 'GenerationJnorm'],
      # model=['diagREDM'],\
      # fixed_beta_intercept = 'betainterceptPCAWG4',\
      # fixed_beta_slope = ['betaslopezerosPCAWG4', 'betaslopeonechangingPCAWG4'],\
      # sdRE_input = 'covmatPCAWG4',\
      # n = 200, nlambda = 14072, lmbda = 80, d = 6, beta_intensity=0)
      # --------------------------------------------------------------------------------------------------------- #

# expand(['/Users/morril01/Documents/PhD/GlobalDA/data/restricted/pcawg/annovar_annotation/'+x.strip('.gz')+'.annovar' for x in listdir('/Users/morril01/Documents/PhD/GlobalDA/data/restricted/pcawg/pcawg_restricted_snv/') if re.search('.gz$', x)])


numreplicates_for_bias = 1000 ## for bias analysis
# numreplicates_for_bias = 200 ## for baseline comparisons


rule index_vcf:
    input:
        "../data/restricted/pcawg/pcawg_restricted_snv/{sample}.consensus.20160830.somatic.snv_mnv.vcf.gz"
    output:
        "../data/restricted/pcawg/pcawg_restricted_snv/{sample}.consensus.20160830.somatic.snv_mnv.vcf.gz.tbi"
    shell:
        "tabix -f {input}"

rule make_roo_files:
    input:
        lambda wildcards: expand("{sample_from_group}",
        sample_from_group=grouped_samples[wildcards.cancer_type].split())
    output:
         "../data/roo/{cancer_type}_{feature_type}_ROO.RDS"
    params:
       ct="{cancer_type}",
       f="{feature_type}"
    shell:
        "Rscript 1_create_ROO/create_ROO_split.R --input_files '{input}' --cancer_type {params.ct} --feature_type {params.f} --output {output}"

rule make_roo_filesMSE:
    input:
        '../data/restricted/pcawg/pcawg.wg11.final_sample_list_MARCH2019.txt'
    output:
         "../data/roo/{cancer_type}_signaturesMSE_ROO2.RDS"
    params:
       ct="{cancer_type}",
    shell:
        "Rscript 1_create_ROO/sigextractB_extract_mutations_mutSigExtractor.R --input_files {input} --cancer_type {params.ct} --output {output}"

rule inference_TMB:
    input:
        "../data/roo/{cancer_type}_{feature_type}_ROO.RDS"
    params:
       model="{model}",
       feature_type="{feature_type}"
    log:
        "logs/inference/TMBinference_{cancer_type}_{feature_type}_{model}.log"
    output:
        "../results/results_TMB/pcawg_robjects/tmb_results/nlminb/{model}_{cancer_type}_{feature_type}.RDS"
    shell:
        "Rscript 2_inference_TMB/run_TMB.R --input {input} --output {output} --model {params.model} --feature_type {params.feature_type} --optimiser nlminb --simulation_bool F --read_directly T --use_previous_run_startingvals T"

rule simulate_for_comparison_multiple:
    input:
        "../data/assessing_models_simulation/{datasetgeneration}"
    params:
        datasetgeneration = "{datasetgeneration}",
        n = "{n}",
        nlambda = "{nlambda}",
        lmbda = "{lmbda}",
        d = "{d}",
        beta_intensity = "{beta_intensity}",
        itnum = "{itnum}",
        fixed_beta_intercept="{fixed_beta_intercept}",
        fixed_beta_slope="{fixed_beta_slope}",
        sdRE_input="{sdRE_input}",
    output:
       "../data/assessing_models_simulation/datasets/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    shell:
       "Rscript --vanilla 3_analysis/2_simulation_model_assessment/1_generate_datasets_simulations/{params.datasetgeneration}.R --input {input} --d {params.d} --n {params.n} --nlambda {params.nlambda} --lambda {params.lmbda} --beta_gamma_shape {params.beta_intensity} --outfile {output} --beta_intercept_input ../data/assessing_models_simulation/additional_files/multiple_fixed_{params.fixed_beta_intercept}.RDS --beta_slope_input ../data/assessing_models_simulation/additional_files/multiple_fixed_{params.fixed_beta_slope}.RDS --sdRE_input ../data/assessing_models_simulation/additional_files/multiple_fixed_{params.sdRE_input}.RDS"

rule inference_simulation_TMB_multiple:
    input:
        "../data/assessing_models_simulation/datasets/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    log:
        "logs/inference/{optimiser}/simulation_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_Model{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.log"
    params:
       model="{model}",
       optimiser="{optimiser}"
    output:
       "../data/assessing_models_simulation/inference_results/TMB/{optimiser}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    shell:
       "Rscript 2_inference_TMB/run_TMB.R --input {input} --output {output} --model {params.model} --optimiser {params.optimiser}  --use_previous_run_startingvals T"

rule inference_simulation_TMB_multiple_LRT:
    input:
        "../data/assessing_models_simulation/datasets/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    log:
        "logs/inference/{optimiser}/simulation_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_Model{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.log"
    params:
       model="{model}",
       optimiser="{optimiser}"
    output:
       "../data/assessing_models_simulation/inference_results/TMB_LRT/{optimiser}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS"
    shell:
       "Rscript 2_inference_TMB/run_TMB.R --return_opt_bool T --input {input} --output {output} --model {params.model} --optimiser {params.optimiser}  --use_previous_run_startingvals T"


rule analyse_simulation_TMB_bias:
    input:
      lambda wildcards: expand("../data/assessing_models_simulation/inference_results/TMB/nlminb/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/multiple_{datasetgeneration}_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_dataset{itnum}.RDS",
        n = wildcards.n,
        nlambda = wildcards.nlambda,
        lmbda = wildcards.lmbda,
        d = wildcards.d,
        beta_intensity = wildcards.beta_intensity,
        datasetgeneration=wildcards.datasetgeneration,
        fixed_beta_intercept = wildcards.fixed_beta_intercept,
        fixed_beta_slope = wildcards.fixed_beta_slope,
        sdRE_input = wildcards.sdRE_input,
        model = "{model}",
        itnum= range(numreplicates_for_bias))
    output:
        "../results/results_TMB/simulated_datasets/bias_and_coverage/multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}/setsim_multiple_{datasetgeneration}_nlminb_{n}_{nlambda}_{lmbda}_{d}_{beta_intensity}_{model}_{fixed_beta_intercept}_{fixed_beta_slope}_{sdRE_input}_onlyconverged_coverage_beta.pdf"
    shell:
        "Rscript 3_analysis/2_simulation_model_assessment/2_analyse_inference_simulations/analyse_bias_and_coverage.R --input_list '{input}' \
        --dataset_generation {wildcards.datasetgeneration} --model {wildcards.model}\
        --multiple_runs T --run_nonconverged F --beta_intercept_input {wildcards.fixed_beta_intercept} \
        --beta_slope_input {wildcards.fixed_beta_slope} --sdRE_input {wildcards.sdRE_input}  --d {wildcards.d} --n {wildcards.n} --nlambda {wildcards.nlambda} --lambda {wildcards.lmbda} --beta_gamma_shape {wildcards.beta_intensity} "


rule unzip:
    input:
        "/Users/morril01/Documents/PhD/GlobalDA/data/restricted/pcawg/pcawg_restricted_snv/{sample}.gz"
    output:
        "/Users/morril01/Documents/PhD/GlobalDA/data/restricted/pcawg/pcawg_restricted_snv/{sample}"
    shell:
        "gzip -d {input}; "

rule annotate_vcf:
    input:
        "/Users/morril01/Documents/PhD/GlobalDA/data/restricted/pcawg/pcawg_restricted_snv/{sample}"
    output:
        "/Users/morril01/Documents/PhD/GlobalDA/data/restricted/pcawg/annovar_annotation/{sample}.annovar"
    params:
    shell:
        "/Users/morril01/software/annovar/./table_annovar.pl {input} \
        /Users/morril01/software/annovar/humandb/ -buildver hg19 -out {output} -remove -protocol icgc28 -operation f -nastring . -csvout -polish \
        -xref /Users/morril01/software/annovar/example/gene_xref.txt; gzip {input}; mv {output}.hg19_multianno.csv {output}"
