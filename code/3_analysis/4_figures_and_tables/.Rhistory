df
}
compute_cor_random_intercepts_pairs('SBS2', 'SBS13')
df
all_random_intercepts_df
compute_cor_random_intercepts_pairs <- function(sig1, sig2){
df <- lapply(all_random_intercepts_df, function(i) try(i[,c(sig1, sig2)]))
# df <- df[!(sapply(APOBEC, df) == 'character')]
# df <- dcast(melt(df), Var1+L1~Var2, value.var = 'value')
df
}
compute_cor_random_intercepts_pairs('SBS2', 'SBS13')
compute_cor_random_intercepts_pairs <- function(sig1, sig2){
df <- lapply(all_random_intercepts_df, function(i) try(i[,c(sig1, sig2)]))
df <- df[!(sapply(APOBEC, df) == 'character')]
# df <- dcast(melt(df), Var1+L1~Var2, value.var = 'value')
df
}
compute_cor_random_intercepts_pairs('SBS2', 'SBS13')
compute_cor_random_intercepts_pairs <- function(sig1, sig2){
df <- lapply(all_random_intercepts_df, function(i) try(i[,c(sig1, sig2)]))
sapply(df, cor)
}
compute_cor_random_intercepts_pairs('SBS2', 'SBS13')
}
compute_cor_random_intercepts_pairs('SBS2', 'SBS13')
compute_cor_random_intercepts_pairs <- function(sig1, sig2){
df <- lapply(all_random_intercepts_df, function(i) try(i[,c(sig1, sig2)]))
sapply(df, function(i) try(cor(i)))
}
compute_cor_random_intercepts_pairs('SBS2', 'SBS13')
compute_cor_random_intercepts_pairs <- function(sig1, sig2){
df <- lapply(all_random_intercepts_df, function(i) try(i[,c(sig1, sig2)]))
sapply(df, function(i) try(cor(i[,1], i[,2])))
}
compute_cor_random_intercepts_pairs('SBS2', 'SBS13')
compute_cor_random_intercepts_pairs <- function(sigs){
df <- lapply(all_random_intercepts_df, function(i) try(i[,c(sigs[1], sigs[2])]))
sapply(df, function(i) try(cor(i[,1], i[,2])))
}
compute_cor_random_intercepts_pairs(c('SBS2', 'SBS13'))
lapply(list(c('SBS2', 'SBS13')), function(pair_sig) compute_cor_random_intercepts_pairs(pair_sig))
cors_RI <- lapply(list(c('SBS1', 'SBS15'),
)
)
cors_RI <- lapply(list(c('SBS1', 'SBS15'),
c('SBS2', 'SBS13')),
function(pair_sig) compute_cor_random_intercepts_pairs(pair_sig))
cors_RI
head(melt(cors_RI))
list_pairs_sigs <- list(c('SBS1', 'SBS15'),
c('SBS2', 'SBS13'))
list_pairs_sigs <- list(c('SBS1', 'SBS15'),
c('SBS2', 'SBS13'))
cors_RI <- sapply(list_pairs_sigs,
function(pair_sig) compute_cor_random_intercepts_pairs(pair_sig), simplify = F, USE.NAMES = T)
head(melt(cors_RI))
cors_RI
names(cors_RI) <- list_pairs_sigs
head(melt(cors_RI))
pair_sig=c('SBS1', 'SBS15')
compute_cor_random_intercepts_pairs(pair_sig)
data.frame(compute_cor_random_intercepts_pairs(pair_sig), simplify = F, USE.NAMES = T)
data.frame(compute_cor_random_intercepts_pairs(pair_sig))
cors_RI <- sapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
names(cors_RI) <- list_pairs_sigs
head(melt(cors_RI))
cors_RI
list_pairs_sigs <- list(c('SBS1', 'SBS15'),
c('SBS2', 'SBS13'))
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
names(cors_RI) <- list_pairs_sigs
head(melt(cors_RI))
cors_RI
cors_RI <- lapply(cors_RI, function(i) i[!grepl('Error', i[,1])])
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI <- lapply(cors_RI, function(i) i[!grepl('Error', i[,1]),])
names(cors_RI) <- list_pairs_sigs
head(melt(cors_RI))
cors_RI
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI <- lapply(cors_RI, function(i) data.frame(i[!grepl('Error', i[,1]),]))
names(cors_RI) <- list_pairs_sigs
head(melt(cors_RI))
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI <- lapply(cors_RI, function(i) as.matrix(i[!grepl('Error', i[,1]),]))
names(cors_RI) <- list_pairs_sigs
head(melt(cors_RI))
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI
i=cors_RI[[1]]
as.matrix(i[!grepl('Error', i[,1]),])
melt(i[!grepl('Error', i[,1]),])
i
i[!grepl('Error', i[,1]),]
i[!grepl('Error', i[,1]),, simplify=F]
i[!grepl('Error', i[,1]), simplify=F]
i
subset(i, grepl('Error', i[,1]))
subset(i, !grepl('Error', i[,1]))
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI <- lapply(cors_RI, function(i) subset(i, !grepl('Error', i[,1])))
names(cors_RI) <- list_pairs_sigs
head(melt(cors_RI))
cors_RI
head(melt(lapply(cors_RI, as.matrix)))
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI <- lapply(cors_RI, function(i) subset(i, !grepl('Error', i[,1])))
names(cors_RI) <- list_pairs_sigs
cors_RI <- melt(lapply(cors_RI, as.matrix))
cors_RI
cors_RI$L1
gsub("(", "", cors_RI$L1)
gsub("\(", "", cors_RI$L1)
gsub("\\(", "", cors_RI$L1)
list_pairs_sigs
sapply(list_pairs_sigs, paste0, collapse='-')
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI <- lapply(cors_RI, function(i) subset(i, !grepl('Error', i[,1])))
names(cors_RI) <- sapply(list_pairs_sigs, paste0, collapse='-')
cors_RI <- melt(lapply(cors_RI, as.matrix))
head(cors_RI)
cors_RI$Var2 %>% unique
ggplot(cors_RI, aes(x=Var1, y=L1, fill=value))+geom_tile()
ggplot(cors_RI, aes(x=Var1, y=L1, fill=as.numeric(value)))+geom_tile()
ggplot(cors_RI, aes(y=Var1, x=L1, fill=as.numeric(value)))+geom_tile()
list_pairs_sigs <- list(c('SBS1', 'SBS5'),
c('SBS1', 'SBS40'),
c('SBS2', 'SBS13'),
c('SBS2', 'SBS8'))
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI <- lapply(cors_RI, function(i) subset(i, !grepl('Error', i[,1])))
names(cors_RI) <- sapply(list_pairs_sigs, paste0, collapse='-')
cors_RI <- melt(lapply(cors_RI, as.matrix))
cors_RI$Var2 %>% unique
ggplot(cors_RI, aes(y=Var1, x=L1, fill=as.numeric(value)))+geom_tile()
ggplot(cors_RI, aes(y=Var1, x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = palette_name)
ggplot(cors_RI, aes(y=Var1, x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'lisbon')
ggplot(cors_RI, aes(y=Var1, x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'berlin')
ggplot(cors_RI, aes(y=Var1, x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'berlin')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))
list_pairs_sigs <- list(c('SBS1', 'SBS5'),
c('SBS1', 'SBS40'),
c('SBS2', 'SBS13'),
c('SBS2', 'SBS8'),
c('SBS2', 'SBS18'))
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI <- lapply(cors_RI, function(i) subset(i, !grepl('Error', i[,1])))
names(cors_RI) <- sapply(list_pairs_sigs, paste0, collapse='-')
cors_RI <- melt(lapply(cors_RI, as.matrix))
cors_RI$Var2 %>% unique
ggplot(cors_RI, aes(y=Var1, x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'berlin')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))
ggplot(cors_RI, aes(y=Var1, x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))
list_pairs_sigs <- list(c('SBS1', 'SBS5'),
c('SBS1', 'SBS4'),
c('SBS1', 'SBS7a'),
c('SBS1', 'SBS40'),
c('SBS2', 'SBS13'),
c('SBS2', 'SBS8'),
c('SBS2', 'SBS18'))
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI <- lapply(cors_RI, function(i) subset(i, !grepl('Error', i[,1])))
names(cors_RI) <- sapply(list_pairs_sigs, paste0, collapse='-')
cors_RI <- melt(lapply(cors_RI, as.matrix))
cors_RI$Var2 %>% unique
ggplot(cors_RI, aes(y=Var1, x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))
list_pairs_sigs <- list(c('SBS1', 'SBS5'),
c('SBS1', 'SBS3'),
c('SBS1', 'SBS4'),
c('SBS1', 'SBS40'),
c('SBS2', 'SBS13'),
c('SBS2', 'SBS8'),
c('SBS2', 'SBS18'))
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI <- lapply(cors_RI, function(i) subset(i, !grepl('Error', i[,1])))
names(cors_RI) <- sapply(list_pairs_sigs, paste0, collapse='-')
cors_RI <- melt(lapply(cors_RI, as.matrix))
cors_RI$Var2 %>% unique
ggplot(cors_RI, aes(y=Var1, x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))), x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))), x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+labs(fill='Cor')
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))), x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+labs(fill='Cor')+
geom_text(aes(label=signif(value, 2)))
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))), x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+labs(fill='Cor')+
geom_text(aes(label=signif(as.numeric(value, 2))))
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))), x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+labs(fill='Cor')+
geom_text(aes(label=round(as.numeric(value, 2))))
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))), x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+labs(fill='Cor')+
geom_text(aes(label=round(as.numeric(value), 2)))
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))), x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+labs(fill='Cor')+
geom_label(aes(label=round(as.numeric(value), 2)))
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))), x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+labs(fill='Cor')+
geom_label(aes(label=round(as.numeric(value), 2), fill='white'))
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))), x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+labs(fill='Cor')+
geom_label(aes(label=round(as.numeric(value), 2)), fill='white')
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))), x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+labs(fill='Cor')+
geom_label(aes(label=round(as.numeric(value), 2)), fill=alpha('white', 0.2))
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))), x=L1, fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+labs(fill='Cor')+
geom_label(aes(label=round(as.numeric(value), 2)), fill=alpha('white', 0.2), col='white')
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))), x=factor(L1, levels = names(list_pairs_sigs)), fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+labs(fill='Cor')+
geom_label(aes(label=round(as.numeric(value), 2)), fill=alpha('white', 0.2), col='white')+
labs(x='Signature pair', y='Cancer type')
cors_RI$Var2 %>% unique
list_pairs_sigs <- list(c('SBS1', 'SBS5'),
c('SBS1', 'SBS3'),
c('SBS1', 'SBS4'),
c('SBS1', 'SBS40'),
c('SBS2', 'SBS13'),
c('SBS2', 'SBS8'),
c('SBS2', 'SBS18'))
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI <- lapply(cors_RI, function(i) subset(i, !grepl('Error', i[,1])))
names(cors_RI) <- sapply(list_pairs_sigs, paste0, collapse='-')
cors_RI <- melt(lapply(cors_RI, as.matrix))
cors_RI$Var2 %>% unique
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))), x=factor(L1, levels = list_pairs_sigs), fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+labs(fill='Cor')+
geom_label(aes(label=round(as.numeric(value), 2)), fill=alpha('white', 0.2), col='white')+
labs(x='Signature pair', y='Cancer type')
list_pairs_sigs <- list(c('SBS1', 'SBS5'),
c('SBS1', 'SBS3'),
c('SBS1', 'SBS4'),
c('SBS1', 'SBS40'),
c('SBS2', 'SBS13'),
c('SBS2', 'SBS8'),
c('SBS2', 'SBS18'))
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI <- lapply(cors_RI, function(i) subset(i, !grepl('Error', i[,1])))
names(cors_RI) <- sapply(list_pairs_sigs, paste0, collapse='-')
cors_RI <- melt(lapply(cors_RI, as.matrix))
cors_RI$Var2 %>% unique
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))),
x=factor(L1, levels = sapply(list_pairs_sigs, paste0, collapse='-')),
fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+labs(fill='Cor')+
geom_label(aes(label=round(as.numeric(value), 2)), fill=alpha('white', 0.2), col='white')+
labs(x='Signature pair', y='Cancer type')
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))),
x=factor(L1, levels = sapply(list_pairs_sigs, paste0, collapse='-')),
fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+labs(fill='Cor')+
geom_label(aes(label=round(as.numeric(value), 2)), fill=alpha('white', 0.2), col='white')+
labs(x='Signature pair', y='Cancer type')
ggplot("../../../results/results_TMB/pcawg/randomintercepts_pairssigscors.pdf", height = 5, width = 5)
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))),
x=factor(L1, levels = sapply(list_pairs_sigs, paste0, collapse='-')),
fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+labs(fill='Cor')+
geom_label(aes(label=round(as.numeric(value), 2)), fill=alpha('white', 0.2), col='white')+
labs(x='Signature pair', y='Cancer type')
ggplot("../../../results/results_TMB/pcawg/randomintercepts_pairssigscors.pdf", height = 5, width = 5)
ggsave("../../../results/results_TMB/pcawg/randomintercepts_pairssigscors.pdf", height = 5, width = 5)
dev.off()
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))),
x=factor(L1, levels = sapply(list_pairs_sigs, paste0, collapse='-')),
fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+labs(fill='Cor')+
geom_label(aes(label=round(as.numeric(value), 2)), fill=alpha('white', 0.2), col='white')+
labs(x='Signature pair', y='Cancer type')
ggsave("../../../results/results_TMB/pcawg/randomintercepts_pairssigscors.pdf", height = 5, width = 5)
ggsave("../../../results/results_TMB/pcawg/randomintercepts_pairssigscors.pdf", height = 5, width = 7)
ggsave("../../../results/results_TMB/pcawg/randomintercepts_pairssigscors.pdf", height = 7, width = 7)
?cor
geom_label(aes(label=round(as.numeric(value), 2)), fill=alpha('white', 0.2), col='white')+
labs(x='Signature pair', y='Cancer type', fill='Pearson cor.')+
ggsave("../../../results/results_TMB/pcawg/randomintercepts_pairssigscors.pdf", height = 7, width = 7)
geom_label(aes(label=round(as.numeric(value), 2)), fill=alpha('white', 0.2), col='white')+
labs(x='Signature pair', y='Cancer type', fill='Pearson cor.')
ggsave("../../../results/results_TMB/pcawg/randomintercepts_pairssigscors.pdf", height = 7, width = 7)
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))),
x=factor(L1, levels = sapply(list_pairs_sigs, paste0, collapse='-')),
fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))
geom_label(aes(label=round(as.numeric(value), 2)), fill=alpha('white', 0.2), col='white')+
labs(x='Signature pair', y='Cancer type', fill='Pearson cor.')
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))),
x=factor(L1, levels = sapply(list_pairs_sigs, paste0, collapse='-')),
fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+
geom_label(aes(label=round(as.numeric(value), 2)), fill=alpha('white', 0.2), col='white')+
labs(x='Signature pair', y='Cancer type', fill='Pearson cor.')
ggsave("../../../results/results_TMB/pcawg/randomintercepts_pairssigscors.pdf", height = 7, width = 7)
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))),
x=factor(L1, levels = sapply(list_pairs_sigs, paste0, collapse='-')),
fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+
geom_label(aes(label=round(as.numeric(value), 2)), fill=alpha('white', 0.2), col='white', label.size = NA)+
labs(x='Signature pair', y='Cancer type', fill='Pearson cor.')
ggsave("../../../results/results_TMB/pcawg/randomintercepts_pairssigscors.pdf", height = 7, width = 7)
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))),
x=factor(L1, levels = sapply(list_pairs_sigs, paste0, collapse='-')),
fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+
geom_label(aes(label=round(as.numeric(value), 2)), fill=alpha('black', 0.2), col='white', label.size = NA)+
labs(x='Signature pair', y='Cancer type', fill='Pearson cor.')
ggsave("../../../results/results_TMB/pcawg/randomintercepts_pairssigscors.pdf", height = 7, width = 7)
all_random_intercepts_df
get_intercepts_and_plot <- function(idx, plot_correlation_mat=F, order_both=F, return_df=F){
if(!is.na(all_fullREDMDL_converged[idx])){
cat('Converged run\n')
converged <- T
}else{
cat('Not converged run\n')
converged <- F
}
dmin1 <- length(python_like_select_name(all_fullREDMDL[[idx]]$par.fixed, 'beta'))/2
random_intercepts_diag <- matrix(all_diagREDMDL[[idx]]$par.random, ncol=dmin1)
if(converged){
random_intercepts <- matrix(all_fullREDMDL[[idx]]$par.random, ncol=dmin1)
cormat <- L_to_cov(python_like_select_name(all_fullREDMDL[[idx]]$par.fixed, 'cov_par_RE'),
d = dmin1)
}else{
random_intercepts <- matrix(all_diagREDMDL[[idx]]$par.random, ncol=dmin1)
cormat = cor(random_intercepts)
}
active_sigs <- colnames(all_datasets_active[[idx]]$Y)
if(plot_correlation_mat){
# plt1 <- plot(as.vector(cov(random_intercepts)),
# as.vector(xx))
# abline(coef = c(0,1))
x <- pheatmap::pheatmap(cormat)
rownames(cormat) <- colnames(cormat) <- rev(rev(active_sigs)[-1])#, '/', rev(active_sigs)[1])
if(return_df){
return(cormat)
}else{
plot_intercepts_from_mat(RI_mat = cormat, order_x = x$tree_row$order, colour_scheme_bool=converged, order_both=T)+
ggtitle(paste0(enough_samples[idx]))+labs(fill= paste0('/', rev(active_sigs)[1]))
}
}else{
x <- pheatmap::pheatmap(random_intercepts)
# plt2 <- pheatmap::pheatmap(random_intercepts[x$tree_row$order,], cluster_cols = F, cluster_rows = F)
# plt3 <- pheatmap::pheatmap(random_intercepts_diag[x$tree_row$order,], cluster_cols = F, cluster_rows = F)
# colnames(random_intercepts) <- paste0(rev(rev(active_sigs)[-1]), '/', rev(active_sigs)[1])
colnames(random_intercepts) <- rev(rev(active_sigs)[-1])#, '/', rev(active_sigs)[1])
if(return_df){
return(random_intercepts)
}else{
# RI_mat = random_intercepts; order_x = x$tree_row$order
plot_intercepts_from_mat(RI_mat = random_intercepts, order_x = x$tree_row$order, colour_scheme_bool=converged, order_both=F)+
ggtitle(paste0(enough_samples[idx]))+labs(fill= paste0('/', rev(active_sigs)[1]))
}
}
}
all_random_intercepts_plot_cor_df <- lapply(1:length(enough_samples), get_intercepts_and_plot, plot_correlation_mat = T, order_both=T, return_df=T)
compute_cor_random_intercepts_pairs <- function(sigs){
#df <- lapply(all_random_intercepts_df, function(i) try(i[,c(sigs[1], sigs[2])]))
#df = sapply(df, function(i) try(cor(i[,1], i[,2])))
df = lapply(all_random_intercepts_plot_cor_df, function(i) try(i[sigs[1], sigs[2]]))
df
}
list_pairs_sigs <- list(c('SBS1', 'SBS5'),
c('SBS1', 'SBS3'),
c('SBS1', 'SBS4'),
c('SBS1', 'SBS40'),
c('SBS2', 'SBS13'),
c('SBS2', 'SBS8'),
c('SBS2', 'SBS18'))
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI <- lapply(cors_RI, function(i) subset(i, !grepl('Error', i[,1])))
names(cors_RI) <- sapply(list_pairs_sigs, paste0, collapse='-')
cors_RI <- melt(lapply(cors_RI, as.matrix))
cors_RI$Var2 %>% unique
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))),
x=factor(L1, levels = sapply(list_pairs_sigs, paste0, collapse='-')),
fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+
geom_label(aes(label=round(as.numeric(value), 2)), fill=alpha('black', 0.2), col='white', label.size = NA)+
labs(x='Signature pair', y='Cancer type', fill='Pearson cor.')
cors_RI
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI
cors_RI[[1]]
cors_RI <- lapply(cors_RI, function(i) subset(i, !grepl('Error', i[,1])))
names(cors_RI) <- sapply(list_pairs_sigs, paste0, collapse='-')
cors_RI
cors_RI <- melt(lapply(cors_RI, as.matrix))
head(cors_RI)
cors_RI
all_random_intercepts_plot_cor_df
compute_cor_random_intercepts_pairs <- function(sigs){
#df <- lapply(all_random_intercepts_df, function(i) try(i[,c(sigs[1], sigs[2])]))
#df = sapply(df, function(i) try(cor(i[,1], i[,2])))
df = lapply(all_random_intercepts_plot_cor_df, function(i) try(i[sigs[1], sigs[2]]))
names(df) <- enough_samples
df
}
list_pairs_sigs <- list(c('SBS1', 'SBS5'),
c('SBS1', 'SBS3'),
c('SBS1', 'SBS4'),
c('SBS1', 'SBS40'),
c('SBS2', 'SBS13'),
c('SBS2', 'SBS8'),
c('SBS2', 'SBS18'))
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI <- lapply(cors_RI, function(i) subset(i, !grepl('Error', i[,1])))
names(cors_RI) <- sapply(list_pairs_sigs, paste0, collapse='-')
cors_RI <- melt(lapply(cors_RI, as.matrix))
cors_RI$Var2 %>% unique
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))),
x=factor(L1, levels = sapply(list_pairs_sigs, paste0, collapse='-')),
fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+
geom_label(aes(label=round(as.numeric(value), 2)), fill=alpha('black', 0.2), col='white', label.size = NA)+
labs(x='Signature pair', y='Cancer type', fill='Pearson cor.')
cors_RI
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI <- lapply(cors_RI, function(i) subset(i, !grepl('Error', i[,1])))
names(cors_RI) <- sapply(list_pairs_sigs, paste0, collapse='-')
cors_RI <- melt(lapply(cors_RI, as.matrix))
head(cors_RI)
compute_cor_random_intercepts_pairs <- function(sigs){
#df <- lapply(all_random_intercepts_df, function(i) try(i[,c(sigs[1], sigs[2])]))
#df = sapply(df, function(i) try(cor(i[,1], i[,2])))
df = sapply(all_random_intercepts_plot_cor_df, function(i) try(i[sigs[1], sigs[2]]))
names(df) <- enough_samples
df
}
list_pairs_sigs <- list(c('SBS1', 'SBS5'),
c('SBS1', 'SBS3'),
c('SBS1', 'SBS4'),
c('SBS1', 'SBS40'),
c('SBS2', 'SBS13'),
c('SBS2', 'SBS8'),
c('SBS2', 'SBS18'))
cors_RI <- lapply(list_pairs_sigs,
function(pair_sig) data.frame(compute_cor_random_intercepts_pairs(pair_sig)))
cors_RI <- lapply(cors_RI, function(i) subset(i, !grepl('Error', i[,1])))
names(cors_RI) <- sapply(list_pairs_sigs, paste0, collapse='-')
cors_RI <- melt(lapply(cors_RI, as.matrix))
cors_RI$Var2 %>% unique
ggplot(cors_RI, aes(y=factor(Var1, levels=rev(unique(Var1))),
x=factor(L1, levels = sapply(list_pairs_sigs, paste0, collapse='-')),
fill=as.numeric(value)))+geom_tile()+
scale_fill_scico(palette = 'vik')+
theme(axis.text.x=element_text(angle = 45, hjust = 1, vjust=1))+
geom_label(aes(label=round(as.numeric(value), 2)), fill=alpha('black', 0.2), col='white', label.size = NA)+
labs(x='Signature pair', y='Cancer type', fill='Pearson cor.')
ggsave("../../../results/results_TMB/pcawg/randomintercepts_pairssigscors.pdf", height = 7, width = 7)
all_random_intercepts_plot[[which(enough_samples == 'Liver-HCC')]]
all_random_intercepts_plot[[which(enough_samples == 'Panc-AdenoCA')]]
all_random_intercepts_plot[[which(enough_samples == 'Stomach−AdenoCA')]]
all_random_intercepts_plot[[which(enough_samples == 'Stomach-AdenoCA')]]
100-7.6
