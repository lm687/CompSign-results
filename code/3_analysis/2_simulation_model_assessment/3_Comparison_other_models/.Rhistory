in_files <- unlist(sapply(grep('GenerationMixtureSimulation',
list.files("../../CompSign-results/data/assessing_models_simulation/inference_results/TMB/nlminb/", full.names = T),
value = T),
list.files, full.names = T))
all_out_TMB <- lapply(in_files, readRDS)
names(all_out_TMB) <- paste0('beta_', gsub(".RDS", "", gsub("diagREDM_NA_NA_NA_dataset", "",
gsub("multiple_GenerationMixtureSimulation_150_200_NA_NA_", "", basename(in_files)))))
in_files <- unlist(sapply(grep('GenerationMixtureSimulation',
list.files("../../CompSign-results/data/assessing_models_simulation/inference_results/TMB/nlminb/", full.names = T),
value = T),
list.files, full.names = T))
in_files
setwd("~/Documents/other/PhD/DM/CompSign-results/code/3_analysis/2_simulation_model_assessment/3_Comparison_other_models/")
in_files <- unlist(sapply(grep('GenerationMixtureSimulation',
list.files("../../../../data/assessing_models_simulation/inference_results/TMB/nlminb/", full.names = T),
value = T),
list.files, full.names = T))
in_files
## there are the results from inference and the time it took for these models to run - select only the results
in_files
## there are the results from inference and the time it took for these models to run - select only the results
in_files <- grep('.RDS', in_files, value = T)
in_files
all_out_TMB <- lapply(in_files, readRDS)
names(all_out_TMB) <- paste0('beta_', gsub(".RDS", "", gsub("diagREDM_NA_NA_NA_dataset", "",
gsub("multiple_GenerationMixtureSimulation_150_200_NA_NA_", "", basename(in_files)))))
pvals <- sapply(all_out_TMB, wald_TMB_wrapper)
library(CompSign)
in_files <- unlist(sapply(grep('GenerationMixtureSimulation',
list.files("../../../../data/assessing_models_simulation/inference_results/TMB/nlminb/", full.names = T),
value = T),
list.files, full.names = T))
## there are the results from inference and the time it took for these models to run - select only the results
in_files <- grep('.RDS', in_files, value = T)
all_out_TMB <- lapply(in_files, readRDS)
names(all_out_TMB) <- paste0('beta_', gsub(".RDS", "", gsub("diagREDM_NA_NA_NA_dataset", "",
gsub("multiple_GenerationMixtureSimulation_150_200_NA_NA_", "", basename(in_files)))))
pvals <- sapply(all_out_TMB, wald_TMB_wrapper)
max(pvals, na.rm = T)
min(pvals, na.rm = T)
in_files[is.na(df_pvals)]
setwd("~/Documents/other/PhD/DM/CompSign-results/code/3_analysis/2_simulation_model_assessment/3_Comparison_other_models/")
library(CompSign)
in_files <- unlist(sapply(grep('GenerationMixtureSimulation',
list.files("../../../../data/assessing_models_simulation/inference_results/TMB/nlminb/", full.names = T),
value = T),
list.files, full.names = T))
## there are the results from inference and the time it took for these models to run - select only the results
in_files <- grep('.RDS', in_files, value = T)
all_out_TMB <- lapply(in_files, readRDS)
names(all_out_TMB) <- paste0('beta_', gsub(".RDS", "", gsub("diagREDM_NA_NA_NA_dataset", "",
gsub("multiple_GenerationMixtureSimulation_150_200_NA_NA_", "", basename(in_files)))))
pvals <- sapply(all_out_TMB, wald_TMB_wrapper)
max(pvals, na.rm = T)
min(pvals, na.rm = T)
df_pvals <- data.frame(DA=pvals <= 0.5, beta=sapply(as.numeric(gsub("_.*", "", gsub("beta_", "", names(pvals)))), function(i) softmax(c(i, 0))[1]))
ggplot(df_pvals, aes(x=factor(beta), fill=factor(DA)))+geom_bar()
library(ggplot2)
setwd("~/Documents/other/PhD/DM/CompSign-results/code/3_analysis/2_simulation_model_assessment/3_Comparison_other_models/")
library(CompSign)
library(ggplot2)
in_files <- unlist(sapply(grep('GenerationMixtureSimulation',
list.files("../../../../data/assessing_models_simulation/inference_results/TMB/nlminb/", full.names = T),
value = T),
list.files, full.names = T))
## there are the results from inference and the time it took for these models to run - select only the results
in_files <- grep('.RDS', in_files, value = T)
all_out_TMB <- lapply(in_files, readRDS)
names(all_out_TMB) <- paste0('beta_', gsub(".RDS", "", gsub("diagREDM_NA_NA_NA_dataset", "",
gsub("multiple_GenerationMixtureSimulation_150_200_NA_NA_", "", basename(in_files)))))
pvals <- sapply(all_out_TMB, wald_TMB_wrapper)
max(pvals, na.rm = T)
min(pvals, na.rm = T)
df_pvals <- data.frame(DA=pvals <= 0.5, beta=sapply(as.numeric(gsub("_.*", "", gsub("beta_", "", names(pvals)))), function(i) softmax(c(i, 0))[1]))
ggplot(df_pvals, aes(x=factor(beta), fill=factor(DA)))+geom_bar()
ggplot(df_pvals, aes(x=factor(beta), fill=factor(DA)))+geom_bar()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(df_pvals, aes(x=factor(round(beta, 3)), fill=factor(DA)))+geom_bar()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(df_pvals, aes(x=factor(round(beta, 3)), fill=factor(DA)))+geom_bar()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
ggplot(df_pvals, aes(x=factor(round(beta, 3)), fill=factor(DA)))+geom_bar()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0))
ggplot(df_pvals, aes(x=factor(round(beta, 3)), fill=factor(DA)))+geom_bar()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
df_pvals <- data.frame(DA=pvals <= 0.5,
beta=sapply(as.numeric(gsub("_.*", "", gsub("beta_", "", names(pvals)))), function(i) softmax(c(i, 0))[1]),
betaALR=as.numeric(gsub("_.*", "", gsub("beta_", "", names(pvals)))))
ggplot(df_pvals, aes(x=factor(betaALR), fill=factor(DA)))+geom_bar()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
df_pvals$betaALR
unique(df_pvals$betaALR)
sort(unique(df_pvals$betaALR))
ggplot(df_pvals, aes(x=factor(round(beta, 3), levels=sort(unique(round(beta, 3)))), fill=factor(DA)))+geom_bar()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(df_pvals, aes(x=factor(betaALR, levels=sort(unique(df_pvals$betaALR))), fill=factor(DA)))+geom_bar()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
setwd("~/Documents/other/PhD/DM/CompSign-results/code/3_analysis/2_simulation_model_assessment/3_Comparison_other_models/")
library(CompSign)
library(ggplot2)
in_files <- unlist(sapply(grep('GenerationMixtureSimulation',
list.files("../../../../data/assessing_models_simulation/inference_results/TMB/nlminb/", full.names = T),
value = T),
list.files, full.names = T))
## there are the results from inference and the time it took for these models to run - select only the results
in_files <- grep('.RDS', in_files, value = T)
all_out_TMB <- lapply(in_files, readRDS)
names(all_out_TMB) <- paste0('beta_', gsub(".RDS", "", gsub("diagREDM_NA_NA_NA_dataset", "",
gsub("multiple_GenerationMixtureSimulation_150_200_NA_NA_", "", basename(in_files)))))
pvals <- sapply(all_out_TMB, wald_TMB_wrapper)
max(pvals, na.rm = T)
min(pvals, na.rm = T)
df_pvals <- data.frame(DA=pvals <= 0.5,
beta=sapply(as.numeric(gsub("_.*", "", gsub("beta_", "", names(pvals)))), function(i) softmax(c(i, 0))[1]),
betaALR=as.numeric(gsub("_.*", "", gsub("beta_", "", names(pvals)))))
ggplot(df_pvals, aes(x=factor(betaALR, levels=sort(unique(df_pvals$betaALR))), fill=factor(DA)))+geom_bar()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(df_pvals, aes(x=factor(round(beta, 3), levels=sort(unique(round(beta, 3)))), fill=factor(DA)))+geom_bar()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
tcsm_path = '/Users/lenamorrill/Software/tcsm/'
setwd("~/Documents/other/PhD/DM/CompSign-results/code/3_analysis/2_simulation_model_assessment/3_Comparison_other_models/")
library(CompSign)
library(ggplot2)
in_files <- unlist(sapply(grep('GenerationMixtureSimulation',
list.files("../../../../data/assessing_models_simulation/inference_results/TMB/nlminb/", full.names = T),
value = T),
list.files, full.names = T))
## there are the results from inference and the time it took for these models to run - select only the results
in_files <- grep('.RDS', in_files, value = T)
all_out_TMB <- lapply(in_files, readRDS)
names(all_out_TMB) <- paste0('beta_', gsub(".RDS", "", gsub("diagREDM_NA_NA_NA_dataset", "",
gsub("multiple_GenerationMixtureSimulation_150_200_NA_NA_", "", basename(in_files)))))
pvals <- sapply(all_out_TMB, wald_TMB_wrapper)
max(pvals, na.rm = T)
min(pvals, na.rm = T)
df_pvals <- data.frame(DA=pvals <= 0.5,
beta=sapply(as.numeric(gsub("_.*", "", gsub("beta_", "", names(pvals)))), function(i) softmax(c(i, 0))[1]),
betaALR=as.numeric(gsub("_.*", "", gsub("beta_", "", names(pvals)))))
gsub("_.*", "", gsub("beta_", "", names(pvals)))
sapply(as.numeric(gsub("_.*", "", gsub("beta_", "", names(pvals)))), function(i) softmax(c(i, 0))[1])
names(pvals)
names(all_out_TMB) <- paste0('beta_', gsub(".RDS", "", gsub("diagREDM_NA_NA_NA_dataset", "",
gsub("multiple_GenerationMixtureSimulation_", "", basename(in_files)))))
all_out_TMB
names(all_out_TMB)
names(all_out_TMB) <- paste0(gsub(".RDS", "", gsub("diagREDM_NA_NA_NA_dataset", "",
gsub("multiple_GenerationMixtureSimulation_", "", basename(in_files)))))
names(all_out_TMB)
pvals <- sapply(all_out_TMB, wald_TMB_wrapper)
max(pvals, na.rm = T)
min(pvals, na.rm = T)
names(pvals)
sapply(names(pvals), function(i) strsplit(i, '_')[[1]])
sapply(names(pvals), function(i) strsplit(i, '_')[[1]][5])
df_pvals <- data.frame(DA=pvals <= 0.5,
beta=sapply(as.numeric(sapply(names(pvals), function(i) strsplit(i, '_')[[1]][5])), function(i) softmax(c(i, 0))[1]),
betaALR=as.numeric(sapply(names(pvals), function(i) strsplit(i, '_')[[1]][5])),
numsamples=sapply(names(pvals), function(i) strsplit(i, '_')[[1]][1]),
numsmuts=sapply(names(pvals), function(i) strsplit(i, '_')[[1]][2]))
head(df_pvals)
ggplot(df_pvals, aes(x=factor(betaALR, levels=sort(unique(df_pvals$betaALR))), fill=factor(DA)))+geom_bar()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+facet_wrap(.~interaction(numsamples, numsmuts))
##------------------------------------------------------------------------##
## HiLDA
in_files_HiLDA <- unlist(sapply(grep('GenerationMixtureSimulation',
list.files("../../../../data/assessing_models_simulation/inference_results/HiLDA/", full.names = T),
value = T),
list.files, full.names = T))
in_files_HiLDA
get_inference_files <- function(folder_in){
in_files <- unlist(sapply(grep('GenerationMixtureSimulation',
list.files(folder_in, full.names = T),
value = T),
list.files, full.names = T))
## there are the results from inference and the time it took for these models to run - select only the results
in_files <- grep('.RDS', in_files, value = T)
all_out_TMB <- lapply(in_files, readRDS)
names(all_out_TMB) <- paste0(gsub(".RDS", "", gsub("diagREDM_NA_NA_NA_dataset", "",
gsub("multiple_GenerationMixtureSimulation_", "", basename(in_files)))))
return(all_out_TMB)
}
all_out_TMB <- get_inference_files(folder_in = "../../../../data/assessing_models_simulation/inference_results/TMB/nlminb/")
rm(list = ls())
setwd("~/Documents/other/PhD/DM/CompSign-results/code/3_analysis/2_simulation_model_assessment/3_Comparison_other_models/")
library(CompSign)
library(ggplot2)
get_inference_files <- function(folder_in){
in_files <- unlist(sapply(grep('GenerationMixtureSimulation',
list.files(folder_in, full.names = T),
value = T),
list.files, full.names = T))
## there are the results from inference and the time it took for these models to run - select only the results
in_files <- grep('.RDS', in_files, value = T)
all_out_TMB <- lapply(in_files, readRDS)
names(all_out_TMB) <- paste0(gsub(".RDS", "", gsub("diagREDM_NA_NA_NA_dataset", "",
gsub("multiple_GenerationMixtureSimulation_", "", basename(in_files)))))
return(all_out_TMB)
}
all_out_TMB <- get_inference_files(folder_in = "../../../../data/assessing_models_simulation/inference_results/TMB/nlminb/")
pvals <- sapply(all_out_TMB, wald_TMB_wrapper)
max(pvals, na.rm = T)
min(pvals, na.rm = T)
df_pvals <- data.frame(DA=pvals <= 0.5,
beta=sapply(as.numeric(sapply(names(pvals), function(i) strsplit(i, '_')[[1]][5])), function(i) softmax(c(i, 0))[1]),
betaALR=as.numeric(sapply(names(pvals), function(i) strsplit(i, '_')[[1]][5])),
numsamples=sapply(names(pvals), function(i) strsplit(i, '_')[[1]][1]),
numsmuts=sapply(names(pvals), function(i) strsplit(i, '_')[[1]][2]))
ggplot(df_pvals, aes(x=factor(betaALR, levels=sort(unique(df_pvals$betaALR))), fill=factor(DA)))+geom_bar()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+facet_wrap(.~interaction(numsamples, numsmuts))
ggplot(df_pvals, aes(x=factor(round(beta, 3), levels=sort(unique(round(beta, 3)))), fill=factor(DA)))+geom_bar()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+facet_wrap(.~interaction(numsamples, numsmuts))
##------------------------------------------------------------------------##
## HiLDA
all_out_HiLDA <- get_inference_files(folder_in = "../../../../data/assessing_models_simulation/inference_results/HiLDA//")
all_out_HiLDA
browseVignettes("HiLDA")
browseVignettes("CompSign")
browseVignettes("HiLDA")
# all_out_HiLDA[[1]]$
hildaDiffPlots <- hildaDiffPlot(all_out_HiLDA[[1]], hildaLocal, sigOrder=c(1,3,2))
library(HiLDA)
# all_out_HiLDA[[1]]$
hildaDiffPlots <- hildaDiffPlot(all_out_HiLDA[[1]], hildaLocal, sigOrder=c(1,3,2))
HiLDA::hildaGlobalResult(all_out_HiLDA[[1]])
all_out_HiLDA[[1]]
?hildaGlobalResult
all_out_HiLDA[[1]]
hildaGlobalResult
# all_out_HiLDA[[1]]$
# hildaDiffPlots <- hildaDiffPlot(all_out_HiLDA[[1]], hildaLocal, sigOrder=c(1,3,2))
HiLDA::hildaGlobalResult(all_out_HiLDA[[1]]$BUGSoutput)
# all_out_HiLDA[[1]]$
# hildaDiffPlots <- hildaDiffPlot(all_out_HiLDA[[1]], hildaLocal, sigOrder=c(1,3,2))
HiLDA::hildaGlobalResult(all_out_HiLDA[[1]])
hildaGlobalResult
jagsOutput=all_out_HiLDA[[1]]
if (is(jagsOutput) != "rjags") {
stop("Not an output object from running the HiLDA tests.")
}
if (pM1 <= 0 | pM1 >= 1) {
stop("Please input a fraction between 0 and 1.")
}
pM1 = 0.5
if (is(jagsOutput) != "rjags") {
stop("Not an output object from running the HiLDA tests.")
}
if (pM1 <= 0 | pM1 >= 1) {
stop("Please input a fraction between 0 and 1.")
}
freq <- table(jagsOutput$BUGSoutput$sims.list$pM2)
freq
jagsOutput$BUGSoutput
jagsOutput$BUGSoutput$sims.list
jagsOutput$BUGSoutput$sims.list$p2
jagsOutput$BUGSoutput$sims.list$pStates2
hildaGlobalResult
hildaGlobalResult_v2 <- function (jagsOutput, pM1 = 0.5) {
## replacing pM2 by p2, as pM2 was not found in jagsOutput$BUGSoutput$sims.list
if (is(jagsOutput) != "rjags") {
stop("Not an output object from running the HiLDA tests.")
}
if (pM1 <= 0 | pM1 >= 1) {
stop("Please input a fraction between 0 and 1.")
}
freq <- table(jagsOutput$BUGSoutput$sims.list$p2)
if (length(freq) == 1) {
stop("It got stuck in the model ", as.numeric(names(freq)) +
1)
}
return(as.vector(freq)[2]/as.vector(freq)[1] * (pM1)/(1 -
pM1))
}
hildaGlobalResult_v2 <- function (jagsOutput, pM1 = 0.5) {
## replacing pM2 by p2, as pM2 was not found in jagsOutput$BUGSoutput$sims.list
if (is(jagsOutput) != "rjags") {
stop("Not an output object from running the HiLDA tests.")
}
if (pM1 <= 0 | pM1 >= 1) {
stop("Please input a fraction between 0 and 1.")
}
freq <- table(jagsOutput$BUGSoutput$sims.list$p2)
if (length(freq) == 1) {
stop("It got stuck in the model ", as.numeric(names(freq)) +
1)
}
return(as.vector(freq)[2]/as.vector(freq)[1] * (pM1)/(1 -
pM1))
}
hildaGlobalResult_v2(all_out_HiLDA[[1]])
df_pvals_HiLDA <- sapply(all_out_HiLDA, hildaGlobalResult_v2)
df_pvals_HiLDA
table(df_pvals_HiLDA)
all_out_HiLDA
table(df_pvals_HiLDA)[[1]]
all_out_HiLDA[[1]]
all_out_HiLDA[[1]]$parameters.to.save
all_out_HiLDA[[1]]$model.file
all_out_HiLDA[[1]]$n.iter
all_out_HiLDA[[1]]$BUGSoutput
get_dataset_files <- function(folder_in){
in_files <- unlist(sapply(grep('GenerationMixtureSimulation',
list.files(folder_in, full.names = T),
value = T),
list.files, full.names = T))
## there are the results from inference and the time it took for these models to run - select only the results
in_files <- grep('.RDS', in_files, value = T)
all_out_TMB <- lapply(in_files, readRDS)
names(all_out_TMB) <- paste0(gsub(".RDS", "", gsub("diagREDM_NA_NA_NA_dataset", "",
gsub("multiple_GenerationMixtureSimulation_", "", basename(in_files)))))
return(all_out_TMB)
}
all_in_datasets <- get_inference_files(folder_in = "../../../../data/assessing_models_simulation/datasets/")
##------------------------------------------------------------------------##
## TCSM
all_out_TCSM <- get_inference_files(folder_in = "../../../../data/assessing_models_simulation/inference_results/TCSM/")
all_out_TCSM
all_out_TCSM[[1]]$effect
all_out_TCSM[[1]]$sigma
all_out_TCSM[[1]]$gamma
all_out_TCSM[[1]]$covariate
all_out_TCSM[[1]]$effect
all_out_TCSM[[1]]$gamma
