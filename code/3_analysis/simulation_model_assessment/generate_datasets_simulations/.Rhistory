ggsave("/Users/morril01/Documents/PhD/other_repos/trip13/results/organoids_cn_rnaseq_cor.pdf", height = 3)
ggplot(TRIP13_cn, aes(x=TRIP13))+geom_density()+geom_vline(aes(xintercept=TRIP13), alpha=0.05)+theme_bw()
ggsave("/Users/morril01/Documents/PhD/other_repos/trip13/results/density_CN_britroc_tcga_icgc.pdf", height = 3)
rm(list=ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
source("recover_COSMIC_signatures.R")
source("../../2_inference_TMB/helper_TMB.R")
library(reshape2)
library(ggplot2)
library(ggrepel)
library(dplyr)
v <- 'v2'
if(v == 'v1'){
vec_sigs <- c("SBS1",   "SBS2",   "SBS3",   "SBS5",   "SBS9",   "SBS13",  "SBS15",  "SBS17a", "SBS17b", "SBS18",
"SBS20",  "SBS21",  "SBS26",  "SBS28",  "SBS40" , "SBS41",  "SBS43",  "SBS44",  "SBS51",  "SBS58")
add=''
}else if(v == 'v2'){
sigs_cosmic <- read.table(paste0( "../../../data/cosmic/sigProfiler_SBS_signatures_2019_05_22.csv"),
stringsAsFactors = FALSE, sep = ',', header = TRUE)
vec_sigs <- colnames(sigs_cosmic)[-c(1,2)]
add = '_allsigs'
}
bleedingAUC <- lapply(vec_sigs, function(i) readRDS(paste0("../../../results/exploratory/bleeding_signatures/", i, add, "_AUC.RDS")))
names(bleedingAUC) <- vec_sigs
bleedingAUC
do.call('rbind', bleedingAUC)
pheatmap::pheatmap(do.call('rbind', bleedingAUC))
pheatmap::pheatmap(do.call('rbind', bleedingAUC), cluster_cols = F, cluster_rows = F)
bleedingAUCrbind <- do.call('rbind', bleedingAUC)
bleedingAUCrbind_nodiag <- bleedingAUCrbind
diag(bleedingAUCrbind) <- NA
bleedingAUCrbind
pheatmap::pheatmap(bleedingAUCrbind, cluster_cols = F, cluster_rows = F)
head(melt(bleedingAUCrbind))
ggplot(melt(bleedingAUCrbind), aes(x=Var1, y=value))+geom_density()
ggplot(melt(bleedingAUCrbind), aes(x=value, col=Var1))+geom_density()
ggplot(melt(bleedingAUCrbind), aes(x=value, col=Var1, label=Var1))+geom_density()+geom_label()+
guides(col='none')
ggplot(melt(bleedingAUCrbind), aes(y=value, col=Var1, label=Var1))+geom_density()+geom_label()+
guides(col='none')
ggplot(melt(bleedingAUCrbind), aes(y=value, col=Var1, label=Var1))+geom_density()+geom_label(aes(x=0))+
guides(col='none')
ggplot(melt(bleedingAUCrbind), aes(y=value, col=Var1, label=Var1))+geom_density()+geom_label(aes(x=0))+
guides(col='none')+theme_bw()+scale_x_continuous(trans = "log2")
ggplot(melt(bleedingAUCrbind), aes(y=value, col=Var1, label=Var1))+geom_density()+geom_label(aes(x=max(Var1)))+
guides(col='none')+theme_bw()+scale_x_continuous(trans = "log2")
ggplot(melt(bleedingAUCrbind), aes(y=value, col=Var1, label=Var1))+geom_density()+geom_label(aes(x=max(value)))+
guides(col='none')+theme_bw()+scale_x_continuous(trans = "log2")
ggplot(melt(bleedingAUCrbind), aes(y=value, col=Var1, label=Var1))+geom_density()+geom_label(aes(x=max(value)))+
guides(col='none')+theme_bw()+scale_y_continuous(trans = "log2")
ggplot(melt(bleedingAUCrbind), aes(y=value, col=Var1, label=Var1))+geom_density()+
#geom_label(aes(x=max(value)))+
guides(col='none')+theme_bw()#+scale_y_continuous(trans = "log2")
ggplot(melt(bleedingAUCrbind), aes(y=value, col=Var1, label=Var1))+geom_density()+
#geom_label(aes(x=max(value)))+
guides(col='none')+theme_bw()+scale_x_continuous(trans = "log2")
bleedingAUCrbind
ggplot(melt(bleedingAUCrbind), aes(y=value+0.01, col=Var1, label=Var1))+geom_density()+
#geom_label(aes(x=max(value)))+
guides(col='none')+theme_bw()+scale_x_continuous(trans = "log2")
ggplot(melt(bleedingAUCrbind), aes(y=value, col=Var1, label=Var1))+geom_density()+
#geom_label(aes(x=max(value)))+
guides(col='none')+theme_bw()#+scale_x_continuous(trans = "log2")
ggplot(melt(bleedingAUCrbind), aes(y=value, col=Var1, label=Var1))+geom_density()+
#geom_label(aes(x=max(value)))+
guides(col='none')+theme_bw()#+scale_x_continuous(trans = "log2")
ggplot(melt(bleedingAUCrbind), aes(x=value, col=Var1, label=Var1))+geom_density()+
#geom_label(aes(x=max(value)))+
guides(col='none')+theme_bw()#+scale_x_continuous(trans = "log2")
ggplot(melt(bleedingAUCrbind), aes(x=value, col=Var1, label=Var1))+geom_density()+
#geom_label(aes(x=max(value)))+
guides(col='none')+theme_bw()+scale_x_continuous(trans = "log2")
bleedingAUCrbind
rowSums(bleedingAUCrbind)
rowSums(bleedingAUCrbind, na.rm = T)
hist(rowSums(bleedingAUCrbind, na.rm = T))
head(bleedingAUCrbind)
bleedingAUCrbindm <- melt(bleedingAUCrbind)
bleedingAUCrbindm$grouped <- rowSums(bleedingAUCrbind, na.rm = T)
ggplot(bleedingAUCrbindm, aes(x=value, col=Var1, label=Var1))+geom_density()+
#geom_label(aes(x=max(value)))+
guides(col='none')+theme_bw()+scale_x_continuous(trans = "log2")+
facet_wrap(.~grouped)
bleedingAUCrbindm$grouped <- (rowSums(bleedingAUCrbind, na.rm = T)) > 0.6
ggplot(bleedingAUCrbindm, aes(x=value, col=Var1, label=Var1))+geom_density()+
#geom_label(aes(x=max(value)))+
guides(col='none')+theme_bw()+scale_x_continuous(trans = "log2")+
facet_wrap(.~grouped)
bleedingAUCrbindm
rowSums(bleedingAUCrbindm)
bleedingAUCrbindm
rowSums(bleedingAUCrbind)
rowSums(bleedingAUCrbind, na.rm = T)
head(melt(rowSums(bleedingAUCrbind, na.rm = T)))
rownames_as_col <- function(i) cbind.data.frame(sig=rownames(i), i)
rownames_as_col(head(melt(rowSums(bleedingAUCrbind, na.rm = T))))
ggplot(rownames_as_col(melt(rowSums(bleedingAUCrbind, na.rm = T))), aes(x=sig, y=value))+
geom_bar(stat = "identity")
ggplot(rownames_as_col(melt(rowSums(bleedingAUCrbind, na.rm = T))),
aes(x=factor(sig, levels=sig[order(value)]), y=value))+
geom_bar(stat = "identity")
ggplot(rownames_as_col(melt(rowSums(bleedingAUCrbind, na.rm = T))),
aes(x=factor(sig, levels=sig[order(value)]), y=value))+
geom_bar(stat = "identity")+
theme(axis.text.x=element_text(angle = 45, hjust = 1))
head(bleedingAUCrbind)
rowSums(bleedingAUCrbind, na.rm = T)
cbind.data.frame(rowSums(bleedingAUCrbind, na.rm = T),
apply(bleedingAUCrbind, 1, sd na.rm = T))
cbind.data.frame(rowSums(bleedingAUCrbind, na.rm = T),
apply(bleedingAUCrbind, 1, sd, na.rm = T))
cbind.data.frame(mean=rowSums(bleedingAUCrbind, na.rm = T),
sd=apply(bleedingAUCrbind, 1, sd, na.rm = T))
rownames(bleedingAUCrbind)
head(melt(bleedingAUCrbind))
bleedingAUCrbindm
head(bleedingAUCrbindm)
ggplot(bleedingAUCrbindm, aes(x=Var1, y=value))+geom_boxplot()
bleedingAUCrbindmsum <- rownames_as_col(melt(rowSums(bleedingAUCrbind, na.rm = T)))
ggplot(bleedingAUCrbindmsum,
aes(x=factor(sig, levels=sig[order(value)]), y=value))+
geom_bar(stat = "identity")+
theme(axis.text.x=element_text(angle = 45, hjust = 1))
bleedingAUCrbindmsum$sig
bleedingAUCrbindmsum <- factor(bleedingAUCrbindmsum$sig, levels=bleedingAUCrbindmsum$sig[order(bleedingAUCrbindmsum$value)])
bleedingAUCrbindmsum$sig
bleedingAUCrbindmsum
levels()
levels(bleedingAUCrbindmsum)
bleedingAUCrbindmsum <- rownames_as_col(melt(rowSums(bleedingAUCrbind, na.rm = T)))
bleedingAUCrbindmsum$sig <- factor(bleedingAUCrbindmsum$sig, levels=bleedingAUCrbindmsum$sig[order(bleedingAUCrbindmsum$value)])
bleedingAUCrbindmsum$sig
levels(bleedingAUCrbindmsum$sig)
ggplot(bleedingAUCrbindm, aes(x=factor(sig, levels=slevels(bleedingAUCrbindmsum$sig)),
y=value))+geom_boxplot()
ggplot(bleedingAUCrbindm, aes(x=factor(sig, levels=levels(bleedingAUCrbindmsum$sig)),
y=value))+geom_boxplot()
head(bleedingAUCrbindm)
ggplot(bleedingAUCrbindm, aes(x=factor(Var1, levels=levels(bleedingAUCrbindmsum$sig)),
y=value))+geom_boxplot()
ggplot(bleedingAUCrbindm, aes(x=factor(Var1, levels=levels(bleedingAUCrbindmsum$sig)),
y=value))+geom_boxplot()+scale_y_continuous(trans = "log2")
ggplot(bleedingAUCrbindm, aes(x=factor(Var1, levels=levels(bleedingAUCrbindmsum$sig)),
y=value))+geom_boxplot()+scale_y_continuous(trans = "log2")+
theme_bw()
ggplot(bleedingAUCrbindm, aes(x=factor(Var1, levels=levels(bleedingAUCrbindmsum$sig)),
y=value))+geom_boxplot()+scale_y_continuous(trans = "log2")+
theme_bw()+  theme(axis.text.x=element_text(angle = 45, hjust = 1))
bleedingAUCrbindmsum <- rownames_as_col(melt(apply(bleedingAUCrbind, 1, median, na.rm = T)))
bleedingAUCrbindmsum$sig <- factor(bleedingAUCrbindmsum$sig, levels=bleedingAUCrbindmsum$sig[order(bleedingAUCrbindmsum$value)])
ggplot(bleedingAUCrbindmsum,
aes(x=, y=value))+
geom_bar(stat = "identity")+
theme(axis.text.x=element_text(angle = 45, hjust = 1))
bleedingAUCrbindmsum
ggplot(bleedingAUCrbindmsum,
aes(x=, y=value))+
geom_bar(stat = "identity")+
theme(axis.text.x=element_text(angle = 45, hjust = 1))
ggplot(bleedingAUCrbindmsum,
aes(x=sig, y=value))+
geom_bar(stat = "identity")+
theme(axis.text.x=element_text(angle = 45, hjust = 1))
head(bleedingAUCrbindm)
ggplot(cbind.data.frame(mean=rowSums(bleedingAUCrbind, na.rm = T),
sd=apply(bleedingAUCrbind, 1, sd, na.rm = T),
sig=rownames(bleedingAUCrbind)),
aes(x=factor(sig, levels=sig[order(value)]), y=value))+
geom_bar(stat = "identity")+
geom_errorbar(aes())
ggplot(bleedingAUCrbindm, aes(x=factor(Var1, levels=levels(bleedingAUCrbindmsum$sig)),
y=value))+geom_boxplot()+scale_y_continuous(trans = "log2")+
theme_bw()+  theme(axis.text.x=element_text(angle = 45, hjust = 1))
bleedingAUCrbindm$equality <- bleedingAUCrbindm$Var1 == bleedingAUCrbindm$Var2
ggplot(bleedingAUCrbindm, aes(x=factor(Var1, levels=levels(bleedingAUCrbindmsum$sig)),
y=value, col=equality))+geom_boxplot()+scale_y_continuous(trans = "log2")+
theme_bw()+  theme(axis.text.x=element_text(angle = 45, hjust = 1))
bleedingAUCrbindm$Var1 == bleedingAUCrbindm$Var2
head(bleedingAUCrbindm)
bleedingAUCrbindm$Var1 == bleedingAUCrbindm$Var2
bleedingAUCrbindm$equality <- bleedingAUCrbindm$Var1 == bleedingAUCrbindm$Var2
table(bleedingAUCrbindm$equality)
ggplot(bleedingAUCrbindm, aes(x=factor(Var1, levels=levels(bleedingAUCrbindmsum$sig)),
y=value, col=equality))+geom_boxplot()+scale_y_continuous(trans = "log2")+
theme_bw()+  theme(axis.text.x=element_text(angle = 45, hjust = 1))
table(bleedingAUCrbindm$equality )
bleedingAUCrbindm[bleedingAUCrbindm$equality,]
bleedingAUCrbindm <- melt(bleedingAUCrbind)
bleedingAUCrbindm2 <- melt(bleedingAUCrbind_nodiag)
bleedingAUCrbindm$grouped <- (rowSums(bleedingAUCrbind, na.rm = T)) > 0.6
ggplot(bleedingAUCrbindm, aes(x=value, col=Var1, label=Var1))+geom_density()+
#geom_label(aes(x=max(value)))+
guides(col='none')+theme_bw()+scale_x_continuous(trans = "log2")+
facet_wrap(.~grouped)
rownames_as_col <- function(i) cbind.data.frame(sig=rownames(i), i)
cbind.data.frame(mean=rowSums(bleedingAUCrbind, na.rm = T),
sd=apply(bleedingAUCrbind, 1, sd, na.rm = T),
sig=rownames(bleedingAUCrbind))
bleedingAUCrbindmsum <- rownames_as_col(melt(apply(bleedingAUCrbind, 1, median, na.rm = T)))
bleedingAUCrbindmsum$sig <- factor(bleedingAUCrbindmsum$sig, levels=bleedingAUCrbindmsum$sig[order(bleedingAUCrbindmsum$value)])
ggplot(bleedingAUCrbindmsum,
aes(x=sig, y=value))+
geom_bar(stat = "identity")+
theme(axis.text.x=element_text(angle = 45, hjust = 1))
head(bleedingAUCrbindm)
ggplot(cbind.data.frame(mean=rowSums(bleedingAUCrbind, na.rm = T),
sd=apply(bleedingAUCrbind, 1, sd, na.rm = T),
sig=rownames(bleedingAUCrbind)),
aes(x=factor(sig, levels=sig[order(value)]), y=value))+
geom_bar(stat = "identity")+
geom_errorbar(aes())
bleedingAUCrbindm$equality <- bleedingAUCrbindm$Var1 == bleedingAUCrbindm$Var2
ggplot(bleedingAUCrbindm, aes(x=factor(Var1, levels=levels(bleedingAUCrbindmsum$sig)),
y=value, col=equality))+geom_boxplot()+scale_y_continuous(trans = "log2")+
theme_bw()+  theme(axis.text.x=element_text(angle = 45, hjust = 1))
bleedingAUCrbindm[bleedingAUCrbindm$equality,]
bleedingAUC <- lapply(vec_sigs, function(i) readRDS(paste0("../../../results/exploratory/bleeding_signatures/", i, add, "_AUC.RDS")))
names(bleedingAUC) <- vec_sigs
bleedingAUCrbind <- do.call('rbind', bleedingAUC)
pheatmap::pheatmap()
pheatmap::pheatmap(bleedingAUCrbind, cluster_cols = F, cluster_rows = F)
bleedingAUCrbind_nodiag <- bleedingAUCrbind
diag(bleedingAUCrbind_nodiag) <- NA
pheatmap::pheatmap(bleedingAUCrbind, cluster_cols = F, cluster_rows = F)
bleedingAUCrbindm <- melt(bleedingAUCrbind)
bleedingAUCrbindm2 <- melt(bleedingAUCrbind_nodiag)
bleedingAUCrbindm$grouped <- (rowSums(bleedingAUCrbind, na.rm = T)) > 0.6
ggplot(bleedingAUCrbindm, aes(x=value, col=Var1, label=Var1))+geom_density()+
#geom_label(aes(x=max(value)))+
guides(col='none')+theme_bw()+scale_x_continuous(trans = "log2")+
facet_wrap(.~grouped)
rownames_as_col <- function(i) cbind.data.frame(sig=rownames(i), i)
cbind.data.frame(mean=rowSums(bleedingAUCrbind, na.rm = T),
sd=apply(bleedingAUCrbind, 1, sd, na.rm = T),
sig=rownames(bleedingAUCrbind))
bleedingAUCrbindmsum <- rownames_as_col(melt(apply(bleedingAUCrbind, 1, median, na.rm = T)))
bleedingAUCrbindmsum$sig <- factor(bleedingAUCrbindmsum$sig, levels=bleedingAUCrbindmsum$sig[order(bleedingAUCrbindmsum$value)])
ggplot(bleedingAUCrbindmsum,
aes(x=sig, y=value))+
geom_bar(stat = "identity")+
theme(axis.text.x=element_text(angle = 45, hjust = 1))
head(bleedingAUCrbindm)
ggplot(cbind.data.frame(mean=rowSums(bleedingAUCrbind, na.rm = T),
sd=apply(bleedingAUCrbind, 1, sd, na.rm = T),
sig=rownames(bleedingAUCrbind)),
aes(x=factor(sig, levels=sig[order(value)]), y=value))+
geom_bar(stat = "identity")+
geom_errorbar(aes())
bleedingAUCrbindm$equality <- bleedingAUCrbindm$Var1 == bleedingAUCrbindm$Var2
ggplot(bleedingAUCrbindm, aes(x=factor(Var1, levels=levels(bleedingAUCrbindmsum$sig)),
y=value, col=equality))+geom_boxplot()+scale_y_continuous(trans = "log2")+
theme_bw()+  theme(axis.text.x=element_text(angle = 45, hjust = 1))
bleedingAUCrbindm[bleedingAUCrbindm$equality,]
ggplot(bleedingAUCrbindm, aes(x=factor(Var1, levels=levels(bleedingAUCrbindmsum$sig)),
y=value, col=equality))+geom_boxplot()+#scale_y_continuous(trans = "log2")+
theme_bw()+  theme(axis.text.x=element_text(angle = 45, hjust = 1))
bleedingAUCrbindm[bleedingAUCrbindm$equality,]+labs(x='Signatures', y='AUC exposures')
ggplot(bleedingAUCrbindm, aes(x=factor(Var1, levels=levels(bleedingAUCrbindmsum$sig)),
y=value, col=equality))+geom_boxplot()+#scale_y_continuous(trans = "log2")+
theme_bw()+  theme(axis.text.x=element_text(angle = 45, hjust = 1))+labs(x='Signatures', y='AUC exposures')
ggplot(bleedingAUCrbindm, aes(x=factor(Var1, levels=levels(bleedingAUCrbindmsum$sig)),
y=value, col=equality))+geom_boxplot()+#scale_y_continuous(trans = "log2")+
theme_bw()+  theme(axis.text.x=element_text(angle = 45, hjust = 1))+labs(x='Signatures', y='AUC exposures')+
guides(col='none')
ggsave(paste0("../../../results/exploratory/bleeding_signatures/all_signatures_AUC_boxplots.pdf"),
height = 2.5, width = 6)
system("open ../../../results/exploratory/bleeding_signatures/")
system("open ../../../results/exploratory/bleeding_signatures/")
ggsave(paste0("../../../results/exploratory/bleeding_signatures/all_signatures_AUC_boxplots.pdf"),
height = 2.5, width = 7)
ggsave(paste0("../../../results/exploratory/bleeding_signatures/all_signatures_AUC_boxplots.pdf"),
height = 2.5, width = 8.5)
ggsave(paste0("../../../results/exploratory/bleeding_signatures/all_signatures_AUC_boxplots.pdf"),
height = 2.5, width = 9.5)
ggsave(paste0("../../../results/exploratory/bleeding_signatures/all_signatures_AUC_boxplots.pdf"),
height = 2.5, width = 10.5)
rm(list=ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
source("recover_COSMIC_signatures.R")
source("../../2_inference_TMB/helper_TMB.R")
library(reshape2)
library(ggplot2)
library(ggrepel)
library(dplyr)
library(visNetwork)
v <- 'v2'
if(v == 'v1'){
vec_sigs <- c("SBS1",   "SBS2",   "SBS3",   "SBS5",   "SBS9",   "SBS13",  "SBS15",  "SBS17a", "SBS17b", "SBS18",
"SBS20",  "SBS21",  "SBS26",  "SBS28",  "SBS40" , "SBS41",  "SBS43",  "SBS44",  "SBS51",  "SBS58")
add=''
}else if(v == 'v2'){
sigs_cosmic <- read.table(paste0( "../../../data/cosmic/sigProfiler_SBS_signatures_2019_05_22.csv"),
stringsAsFactors = FALSE, sep = ',', header = TRUE)
vec_sigs <- colnames(sigs_cosmic)[-c(1,2)]
add = '_allsigs'
}
AUC_signatures <- lapply(vec_sigs, function(it_sig){
readRDS(paste0("../../../results/exploratory/bleeding_signatures/", it_sig, add, "_AUC.RDS"))
}); names(AUC_signatures) <- vec_sigs
AUC_signatures
AUC_signatures_max <- lapply(names(AUC_signatures), function(iname){
## get the signature that gains the most weight, excluding the original signature
i=AUC_signatures[[iname]]
j <- sort(i)
j[-which(names(j) == iname)][1]
}); names(AUC_signatures_max) <- names(AUC_signatures)
AUC_signatures_max
AUC_signatures
AUC_signatures_max$SBS85
AUC_signatures_max <- lapply(names(AUC_signatures), function(iname){
## get the signature that gains the most weight, excluding the original signature
i=AUC_signatures[[iname]]
j <- sort(i, decreasing = T)
j[-which(names(j) == iname)][1]
}); names(AUC_signatures_max) <- names(AUC_signatures)
AUC_signatures_max$SBS85
head(melt(AUC_signatures_max))
sink_source_matrix <- cbind.data.frame(source=names(AUC_signatures_max),
sink=sapply(as.vector(AUC_signatures_max), names))
head(melt(sink_source_matrix))
ggplot(sink_source_matrix, aes(y=factor(source, rev(gtools::mixedsort(unique(source)))),
x=sink))+geom_tile()+theme_bw()+
labs(x='Sink signature', y='Source signature')
ggplot(sink_source_matrix, aes(y=factor(source, rev(gtools::mixedsort(unique(source)))),
x=sink))+geom_tile()+theme_bw()+
labs(x='Sink signature', y='Source signature')
ggsave(paste0("../../../results/exploratory/bleeding_signatures/sink_source_matrix_max.pdf"),
height = 8, width = 4)
order_from_column2 <- function(i){
i <- i[rev(gtools::mixedorder(unique(i[,1])))  ,]
i <- i[(gtools::mixedorder(i[,2])),]
i[,1]
}
ggplot(sink_source_matrix, aes(y=factor(source, order_from_column2(sink_source_matrix)),
x=factor(sink, levels=gtools::mixedsort(unique(sink)))))+geom_tile()+theme_bw()+
labs(x='Sink signature', y='Source signature')
ggsave(paste0("../../../results/exploratory/bleeding_signatures/sink_source_matrix_max_v2.pdf"),
height = 8, width = 2.4)
ggsave(paste0("../../../results/exploratory/bleeding_signatures/sink_source_matrix_max_v2.pdf"),
# height = 8, width = 2.4)
height = 8, width = 5)
system("open ../../../results/exploratory/bleeding_signatures/")
ggplot(sink_source_matrix, aes(y=factor(source, order_from_column2(sink_source_matrix)),
x=factor(sink, levels=gtools::mixedsort(unique(sink)))))+geom_tile()+theme_bw()+
labs(x='Sink signature', y='Source signature')+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggsave(paste0("../../../results/exploratory/bleeding_signatures/sink_source_matrix_max_v2.pdf"),
# height = 8, width = 2.4)
height = 8, width = 5)
AUC_signatures_mat <- do.call('cbind', AUC_signatures)
AUC_signatures_mat_melt <- (melt(AUC_signatures_mat))
ggplot(AUC_signatures_mat_melt, aes(x=factor(Var1, rev(gtools::mixedsort(unique(Var1)))),
y=factor(Var2, rev(gtools::mixedsort(unique(Var1)))),
fill=value))+
geom_tile()+theme_bw()+
labs(x='Sink signature', y='Source signature')+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggsave(paste0("../../../results/exploratory/bleeding_signatures/sink_source_matrix.pdf"),
height = 8, width = 8)
adjmat_to_graph <- function(adj, ...){
adj <- adj[order(rownames(adj)),]
adj <- adj[,order(colnames(adj))]
# for(i in 1:5){for(j in 1:i){adj[i,j] = adj[j,i]}}
# NodeList <- cbind(x=c(1,1,3,2,3), y=c(0,2.5,2.5,6,0))
graph <- igraph::graph_from_adjacency_matrix(adj, weighted = T, mode = "directed")
# LO = layout_nicely(graph); LO[,1] <- LO[,1]+3; LO[,2] <- LO[,2]+3
# NodeList <- cbind(x=c(1,1,3,2,3), y=c(0,2.5,2.5,6,0))
NodeList <- t(sapply(1:nrow(adj), function(i) c(sin(i/pi), cos(i/pi))))
colnames(NodeList) <- c('x', 'y')
plot(graph, edge.width=igraph::E(graph)$weight*60,# layout=NodeList,
vertex.color='white', mark.col='white',edge.arrow.size=.3,size=.5, edge.color='black',
layout=NodeList, vertex.size=10, ...)
## size2=1,
}
plot(igraph::graph.adjacency(AUC_signatures_mat, weighted = T))
plot(density(log(as.vector(AUC_signatures_mat_prune))))
adjmat_to_graph(prune_with_quantile(AUC_signatures_mat))
pdf("../../../results/exploratory/bleeding_signatures/sink_source_matrix_max_network_pruned09_igraph.pdf",
width = 15, height = 15)
adjmat_to_graph(prune_with_quantile(AUC_signatures_mat))
dev.off()
dev.off()
pdf("../../../results/exploratory/bleeding_signatures/sink_source_matrix_max_network_pruned09_igraph.pdf",
width = 15, height = 15)
adjmat_to_graph(prune_with_quantile(AUC_signatures_mat))
dev.off()
adjmat_to_graph(prune_with_quantile(AUC_signatures_mat, quantile_val = 0.95))
pdf("../../../results/exploratory/bleeding_signatures/sink_source_matrix_max_network_pruned095_igraph.pdf",
width = 15, height = 15)
adjmat_to_graph(prune_with_quantile(AUC_signatures_mat, quantile_val = 0.95))
dev.off()
dev.off()
pdf("../../../results/exploratory/bleeding_signatures/sink_source_matrix_max_network_pruned095_igraph.pdf",
width = 15, height = 15)
adjmat_to_graph(prune_with_quantile(AUC_signatures_mat, quantile_val = 0.95))
dev.off()
AUC_signatures_mat_pruned_090quant <- prune_with_quantile(AUC_signatures_mat)
visNetwork::visNetwork(nodes=data.frame(id=colnames(AUC_signatures_mat_pruned_090quant),
label=gsub('SBS', '', colnames(AUC_signatures_mat_pruned_090quant)),
size=30,shape='circle',
font.color='black',
color='lightgrey',
# color.background='lightgrey',
font.size =70), ## font.size ==size of the node
edges = cbind.data.frame(rename_cols_visnetwork(melt(AUC_signatures_mat_pruned_090quant) %>% filter(value>0)),
color ='black')) %>%
visNetwork::visPhysics(solver = "forceAtlas2Based") %>%
visEdges(shadow = FALSE,
arrows =list(to = list(enabled = TRUE, scaleFactor = 1.5)))
AUC_signatures_mat
AUC_signatures_mat
# AUC_signatures_mat_pruned_090quant <- prune_with_quantile(AUC_signatures_mat)
AUC_signatures_mat_pruned_090quant <- prune_with_quantile(t(AUC_signatures_mat))
visNetwork::visNetwork(nodes=data.frame(id=colnames(AUC_signatures_mat_pruned_090quant),
label=gsub('SBS', '', colnames(AUC_signatures_mat_pruned_090quant)),
size=30,shape='circle',
font.color='black',
color='lightgrey',
# color.background='lightgrey',
font.size =70), ## font.size ==size of the node
edges = cbind.data.frame(rename_cols_visnetwork(melt(AUC_signatures_mat_pruned_090quant) %>% filter(value>0)),
color ='black')) %>%
visNetwork::visPhysics(solver = "forceAtlas2Based") %>%
visEdges(shadow = FALSE,
arrows =list(to = list(enabled = TRUE, scaleFactor = 1.5)))
AUC_signatures_mat <- t(do.call('cbind', AUC_signatures))
AUC_signatures_mat_melt <- (melt(AUC_signatures_mat))
ggplot(AUC_signatures_mat_melt, aes(x=factor(Var1, rev(gtools::mixedsort(unique(Var1)))),
y=factor(Var2, rev(gtools::mixedsort(unique(Var1)))),
fill=value))+
geom_tile()+theme_bw()+
labs(x='Sink signature', y='Source signature')+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggsave(paste0("../../../results/exploratory/bleeding_signatures/sink_source_matrix.pdf"),
height = 8, width = 8)
adjmat_to_graph <- function(adj, ...){
adj <- adj[order(rownames(adj)),]
adj <- adj[,order(colnames(adj))]
# for(i in 1:5){for(j in 1:i){adj[i,j] = adj[j,i]}}
# NodeList <- cbind(x=c(1,1,3,2,3), y=c(0,2.5,2.5,6,0))
graph <- igraph::graph_from_adjacency_matrix(adj, weighted = T, mode = "directed")
# LO = layout_nicely(graph); LO[,1] <- LO[,1]+3; LO[,2] <- LO[,2]+3
# NodeList <- cbind(x=c(1,1,3,2,3), y=c(0,2.5,2.5,6,0))
NodeList <- t(sapply(1:nrow(adj), function(i) c(sin(i/pi), cos(i/pi))))
colnames(NodeList) <- c('x', 'y')
plot(graph, edge.width=igraph::E(graph)$weight*60,# layout=NodeList,
vertex.color='white', mark.col='white',edge.arrow.size=.3,size=.5, edge.color='black',
layout=NodeList, vertex.size=10, ...)
## size2=1,
}
plot(igraph::graph.adjacency(AUC_signatures_mat, weighted = T))
plot(density(log(as.vector(AUC_signatures_mat_prune))))
dev.off()
pdf("../../../results/exploratory/bleeding_signatures/sink_source_matrix_max_network_pruned09_igraph.pdf",
width = 15, height = 15)
adjmat_to_graph(prune_with_quantile(AUC_signatures_mat))
dev.off()
pdf("../../../results/exploratory/bleeding_signatures/sink_source_matrix_max_network_pruned095_igraph.pdf",
width = 15, height = 15)
adjmat_to_graph(prune_with_quantile(AUC_signatures_mat, quantile_val = 0.95))
dev.off()
# AUC_signatures_mat_pruned_090quant <- prune_with_quantile(AUC_signatures_mat)
AUC_signatures_mat_pruned_090quant <- prune_with_quantile(AUC_signatures_mat)
visNetwork::visNetwork(nodes=data.frame(id=colnames(AUC_signatures_mat_pruned_090quant),
label=gsub('SBS', '', colnames(AUC_signatures_mat_pruned_090quant)),
size=30,shape='circle',
font.color='black',
color='lightgrey',
# color.background='lightgrey',
font.size =70), ## font.size ==size of the node
edges = cbind.data.frame(rename_cols_visnetwork(melt(AUC_signatures_mat_pruned_090quant) %>% filter(value>0)),
color ='black')) %>%
visNetwork::visPhysics(solver = "forceAtlas2Based") %>%
visEdges(shadow = FALSE,
arrows =list(to = list(enabled = TRUE, scaleFactor = 1.5)))
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
source("../../../2_inference_TMB/helper_TMB.R")
## ----------------------------------------------------------------------------------------- ##
enough_samples = read.table("../../../../data/restricted/pcawg/CT_sufficient_samples.txt", comment.char='#')[,1]
enough_samples
read_diagRE <- function(ct){
try(readRDS(paste0("../../../../data/pcawg_robjects_cache/tmb_results/nlminb/diagREDM_", ct, "_signaturesPCAWG.RDS")))
}
read_fullRE <- function(ct){
try(readRDS(paste0("../../../../data/pcawg_robjects_cache/tmb_results/nlminb/fullREDM_", ct, "_signaturesPCAWG.RDS")))
}
diagRE_params <- lapply(enough_samples, read_diagRE)
fullRE_params <- lapply(enough_samples, read_fullRE)
names(diagRE_params) <- names(fullRE_params) <- enough_samples
diagRE_params$`Lymph-BNHL`$par.fixed
betas2 <- matrix(python_like_select_name(diagRE_params$`Lymph-BNHL`$par.fixed, 'beta'), nrow=2)
cov2 <- diag(exp(python_like_select_name(diagRE_params$`Lymph-BNHL`$par.fixed, 'logs_sd_RE')))
lambdas <- python_like_select_name(diagRE_params$`Lymph-BNHL`$par.fixed, 'log_lambda')
## lambdas: we don't save them but add them in the Snakemake code
exp(lambdas)
betas2
dim(betas2)
diagRE_params$`CNS-GBM`
betas2 <- matrix(python_like_select_name(diagRE_params$`CNS-GBM`$par.fixed, 'beta'), nrow=2)
cov2 <- diag(exp(python_like_select_name(diagRE_params$`CNS-GBM`$par.fixed, 'logs_sd_RE')))
lambdas <- python_like_select_name(diagRE_params$`CNS-GBM`$par.fixed, 'log_lambda')
## lambdas: we don't save them but add them in the Snakemake code
exp(lambdas)
saveRDS(cov1, "/Users/morril01/Documents/PhD/GlobalDA/data/assessing_models_simulation/additional_files/multiple_fixed_covmatPCAWG2.RDS")
saveRDS(cov2, "/Users/morril01/Documents/PhD/GlobalDA/data/assessing_models_simulation/additional_files/multiple_fixed_covmatPCAWG2.RDS")
saveRDS(betas2[1,], "/Users/morril01/Documents/PhD/GlobalDA/data/assessing_models_simulation/additional_files/multiple_fixed_betainterceptPCAWG2.RDS")
saveRDS(betas2[2,], "/Users/morril01/Documents/PhD/GlobalDA/data/assessing_models_simulation/additional_files/multiple_fixed_betaslopePCAWG2.RDS")
betas2
betas1 <- matrix(python_like_select_name(diagRE_params$`Kidney-ChRCC`$par.fixed, 'beta'), nrow=2)
betas1
betas2
