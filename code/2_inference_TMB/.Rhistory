name_it<- paste0(ct, '_allCNSsigs')
new_sigs <- diagDM_newsigs <- list()
all_CNS_sigs = unique(gtools::mixedsort(c(colnames(read_info_list$`CNS-GBM`$dataset_active_sigs$Y),
colnames(read_info_list$`CNS-Medullo`$dataset_active_sigs$Y),
colnames(read_info_list$`CNS-PiloAstro`$dataset_active_sigs$Y))))
all_CNS_sigs
ct <- 'CNS-GBM'
ct <- 'CNS-Medullo'
ct <- 'CNS-PiloAstro'
subset_sigs_additional_runs <- list()
subset_sigs_additional_runs[[paste0(ct, '_allCNSsigs')]] <- all_CNS_sigs
subset_sigs_additional_runs
ct <- 'CNS-GBM'
name_it<- paste0(ct, '_allCNSsigs')
new_sigs[[name_it]] <- extract_sigs_TMB_obj_QP(dataset_obj_trinucleotide = read_info_list[[ct]]$dataset_nucleotidesubstitution3,
subset_signatures = subset_sigs_additional_runs[[name_it]])
head(new_sigs[[name_it]]$Y)
diagDM_newsigs[[name_it]] <- wrapper_run_TMB(object = new_sigs[[name_it]],
model = "diagRE_DM", use_nlminb=T, smart_init_vals=F)
ct <- 'CNS-GBM'
name_it<- paste0(ct, '_allCNSsigs')
new_sigs[[name_it]] <- extract_sigs_TMB_obj_QP(dataset_obj_trinucleotide = read_info_list[[ct]]$dataset_nucleotidesubstitution3,
subset_signatures = subset_sigs_additional_runs[[name_it]])
all_CNS_sigs = unique(gtools::mixedsort(c(colnames(read_info_list$`CNS-GBM`$dataset_active_sigs$Y),
colnames(read_info_list$`CNS-Medullo`$dataset_active_sigs$Y),
colnames(read_info_list$`CNS-PiloAstro`$dataset_active_sigs$Y))))
all_CNS_sigs
new_sigs <- diagDM_newsigs <- list()
subset_sigs_additional_runs <- list()
all_CNS_sigs = unique(gtools::mixedsort(c(colnames(read_info_list$`CNS-GBM`$dataset_active_sigs$Y),
colnames(read_info_list$`CNS-Medullo`$dataset_active_sigs$Y),
colnames(read_info_list$`CNS-PiloAstro`$dataset_active_sigs$Y))))
all_CNS_sigs
ct <- 'CNS-GBM'
subset_sigs_additional_runs[[paste0(ct, '_allCNSsigs')]] <- all_CNS_sigs
name_it<- paste0(ct, '_allCNSsigs')
new_sigs[[name_it]] <- extract_sigs_TMB_obj_QP(dataset_obj_trinucleotide = read_info_list[[ct]]$dataset_nucleotidesubstitution3,
subset_signatures = subset_sigs_additional_runs[[name_it]])
head(new_sigs[[name_it]]$Y)
diagDM_newsigs[[name_it]] <- wrapper_run_TMB(object = new_sigs[[name_it]],
model = "diagRE_DM", use_nlminb=T, smart_init_vals=F)
plot_betas(diagDM_newsigs[[name_it]], names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F)
ct <- 'CNS-Medullo'
name_it<- paste0(ct, '_allCNSsigs')
new_sigs[[name_it]] <- extract_sigs_TMB_obj_QP(dataset_obj_trinucleotide = read_info_list[[ct]]$dataset_nucleotidesubstitution3,
subset_signatures = subset_sigs_additional_runs[[name_it]])
head(new_sigs[[name_it]]$Y)
read_info_list[[ct]]$dataset_nucleotidesubstitution3
subset_sigs_additional_runs[[paste0(ct, '_allCNSsigs')]] <- all_CNS_sigs
name_it<- paste0(ct, '_allCNSsigs')
new_sigs[[name_it]] <- extract_sigs_TMB_obj_QP(dataset_obj_trinucleotide = read_info_list[[ct]]$dataset_nucleotidesubstitution3,
subset_signatures = subset_sigs_additional_runs[[name_it]])
head(new_sigs[[name_it]]$Y)
diagDM_newsigs[[name_it]] <- wrapper_run_TMB(object = new_sigs[[name_it]],
model = "diagRE_DM", use_nlminb=T, smart_init_vals=F)
plot_betas(diagDM_newsigs[[name_it]], names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F)
ct <- 'CNS-PiloAstro'
subset_sigs_additional_runs[[paste0(ct, '_allCNSsigs')]] <- all_CNS_sigs
name_it<- paste0(ct, '_allCNSsigs')
new_sigs[[name_it]] <- extract_sigs_TMB_obj_QP(dataset_obj_trinucleotide = read_info_list[[ct]]$dataset_nucleotidesubstitution3,
subset_signatures = subset_sigs_additional_runs[[name_it]])
head(new_sigs[[name_it]]$Y)
diagDM_newsigs[[name_it]] <- wrapper_run_TMB(object = new_sigs[[name_it]],
model = "diagRE_DM", use_nlminb=T, smart_init_vals=F)
plot_betas(diagDM_newsigs[[name_it]], names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F)
do.call('grid.arrange', lapply(diagDM_newsigs, plot_betas(l, names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F)))
do.call('grid.arrange', lapply(diagDM_newsigs, funciton(l){
do.call('grid.arrange', lapply(diagDM_newsigs, function(l){
plot_betas(l, names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F)
}))
df_CNS = lapply(diagDM_newsigs, function(l){
plot_betas(l, names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F, return_df = T)
})
df_CNS
subset_sigs_additional_runs
names(subset_sigs_additional_runs)
gsub("_allCNSsigs", "", names(subset_sigs_additional_runs))
df_CNS = lapply(diagDM_newsigs, function(l){
plot_betas(l, names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F, return_df = T)
}); names(df_CNS) <- gsub("_allCNSsigs", "", names(subset_sigs_additional_runs))
df_CNS
head(df_CNS)
head(melt(df_CNS))
do.call('grid.arrange', lapply(diagDM_newsigs, function(l){
plot_betas(l, names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F)
}))
head(melt(df_CNS))
melt(df_CNS)$variable
ggplot(melt(df_CNS) %>% filter(variable=='Estimate'), aes(x=LogR, y=value))
ggplot(melt(df_CNS) %>% filter(variable=='Estimate'), aes(x=LogR, y=value))+geom_point()
head(melt(df_CNS) %>% filter(variable=='Estimate'),)
ggplot(melt(df_CNS) %>% filter(variable=='Estimate'), aes(x=LogR, y=value, col=L1))+geom_point()+facet_wrap(.~type_beta)
head(melt(df_CNS))
head(dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value'))
ggplot(head(dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=LogR, y=Estimate, col=L1))+geom_point()+facet_wrap(.~type_beta)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=LogR, y=Estimate, col=L1))+geom_point()+facet_wrap(.~type_beta)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=LogR, y=Estimate, col=L1, group=L1))+geom_point()+facet_wrap(.~type_beta)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR, L1), y=Estimate, col=L1, group=L1))+geom_point()+facet_wrap(.~type_beta)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(L1, LogR), y=Estimate, col=L1, group=L1))+geom_point()+facet_wrap(.~type_beta)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(L1, LogR), y=Estimate, col=L1, group=L1))+geom_point()+facet_wrap(.~type_beta)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
geom_ribbon()
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(L1, LogR), y=Estimate, col=L1, group=L1))+geom_point()+facet_wrap(.~type_beta)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(L1, LogR), y=Estimate, col=L1, group=L1))+geom_point()+facet_wrap(.~type_beta)+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1))+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(L1, LogR), y=Estimate, col=L1, group=L1))+geom_point()+facet_wrap(.~type_beta)+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.2)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(L1, LogR), y=Estimate, col=L1, group=L1))+geom_point()+facet_wrap(.~type_beta)+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.2)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, col=L1, group=L1))+geom_point()+facet_wrap(.~type_beta)+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.2)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
pcawg_palette
names(df_CNS)
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, col=L1, group=L1))+geom_point()+facet_wrap(.~type_beta)+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.2)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+labs(x='Cancer type')+
scale_color_manual(values = pcawg_palette[names(df_CNS)])
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1))+geom_point()+facet_wrap(.~type_beta)+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.2)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+labs(x='Cancer type')+
scale_color_manual(values = pcawg_palette[names(df_CNS)])
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1))+geom_point()+facet_wrap(.~type_beta)+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+labs(x='Cancer type')+
scale_fill_manual(values = pcawg_palette[names(df_CNS)])
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1))+geom_point()+facet_wrap(.~type_beta)+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+labs(x='Cancer type')+
scale_fill_manual(values = pcawg_palette[names(df_CNS)])
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+facet_wrap(.~type_beta)+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+labs(x='Cancer type')+
scale_fill_manual(values = pcawg_palette[names(df_CNS)])
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+facet_wrap(.~type_beta)+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+labs(x='Cancer type')+
scale_fill_manual(values = pcawg_palette[names(df_CNS)])+
scale_color_manual(values = pcawg_palette[names(df_CNS)])
appender <- function(string){
sapply(string, function(stringb){
if(stringb == 'Intercept'){
TeX(paste("$\\beta_0$"))
}else if (stringb == 'Slope'){
TeX(paste("$\\beta_1$"))
}
})
}
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed))+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+labs(x='Cancer type')+
scale_fill_manual(values = pcawg_palette[names(df_CNS)])+
scale_color_manual(values = pcawg_palette[names(df_CNS)])
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed))+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+labs(x='Cancer type')+
scale_fill_manual(values = pcawg_palette[names(df_CNS)])+
scale_color_manual(values = pcawg_palette[names(df_CNS)])
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed))+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(x='Cancer type', y=TeX(paste("$\\hat{\\beta}$")) )+
scale_fill_manual(values = pcawg_palette[names(df_CNS)])+
scale_color_manual(values = pcawg_palette[names(df_CNS)])
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed))+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(x='Cancer type', y=TeX(paste("$\\hat{\\beta}\\pm s.e.$")) )+
scale_fill_manual(values = pcawg_palette[names(df_CNS)])+
scale_color_manual(values = pcawg_palette[names(df_CNS)])
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed))+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(x='Cancer type', y=TeX(paste("$\\hat{\\beta}\\pm sd$")) )+
scale_fill_manual(values = pcawg_palette[names(df_CNS)])+
scale_color_manual(values = pcawg_palette[names(df_CNS)])
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed))+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(x='Cancer type', y=TeX(paste("$\\hat{\\beta}\\pm sd$")), fill='Cancer type' )+
scale_fill_manual(values = pcawg_palette[names(df_CNS)])+
scale_color_manual(values = pcawg_palette[names(df_CNS)])
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed))+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(x='Cancer type', y=TeX(paste("$\\hat{\\beta}\\pm sd$")), fill='Cancer type' , shape='Cancer type' )+
scale_fill_manual(values = pcawg_palette[names(df_CNS)])+
scale_color_manual(values = pcawg_palette[names(df_CNS)])
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed))+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(x='Cancer type', y=TeX(paste("$\\hat{\\beta}\\pm sd$")), fill='Cancer type' , shape='Cancer type' , color='Cancer type' )+
scale_fill_manual(values = pcawg_palette[names(df_CNS)])+
scale_color_manual(values = pcawg_palette[names(df_CNS)])
ggsave("../../results/results_TMB/pcawg/tissue_CNS_betas.pdf")
ggsave("../../results/results_TMB/pcawg/tissue_CNS_betas.pdf", height = 2)
ggsave("../../results/results_TMB/pcawg/tissue_CNS_betas.pdf", height = 3)
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed), scales = 'free')+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(x='Cancer type', y=TeX(paste("$\\hat{\\beta}\\pm sd$")), fill='Cancer type' , shape='Cancer type' , color='Cancer type' )+
scale_fill_manual(values = pcawg_palette[names(df_CNS)])+
scale_color_manual(values = pcawg_palette[names(df_CNS)])
ggsave("../../results/results_TMB/pcawg/tissue_CNS_betas.pdf", height = 3)
all_CNS_sigs
ggplot((dcast(melt(df_CNS), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed), scales = 'free')+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(x='LogR (wrt SBS40)', y=TeX(paste("$\\hat{\\beta}\\pm sd$")), fill='Cancer type' , shape='Cancer type' , color='Cancer type' )+
scale_fill_manual(values = pcawg_palette[names(df_CNS)])+
scale_color_manual(values = pcawg_palette[names(df_CNS)])
ggsave("../../results/results_TMB/pcawg/tissue_CNS_betas.pdf", height = 3)
all_CNS_sigs = unique(gtools::mixedsort(c(colnames(read_info_list$`Panc-AdenoCA`$dataset_active_sigs$Y),
colnames(read_info_list$`Panc-Endocrine`$dataset_active_sigs$Y))))
all_panc_sigs = unique(gtools::mixedsort(c(colnames(read_info_list$`Panc-AdenoCA`$dataset_active_sigs$Y),
colnames(read_info_list$`Panc-Endocrine`$dataset_active_sigs$Y))))
ct <- 'Panc-AdenoCA'
subset_sigs_additional_runs[[paste0(ct, '_allPancsigs')]] <- all_panc_sigs
name_it<- paste0(ct, '_allPancsigs')
new_sigs[[name_it]] <- extract_sigs_TMB_obj_QP(dataset_obj_trinucleotide = read_info_list[[ct]]$dataset_nucleotidesubstitution3,
subset_signatures = subset_sigs_additional_runs[[name_it]])
head(new_sigs[[name_it]]$Y)
diagDM_newsigs[[name_it]] <- wrapper_run_TMB(object = new_sigs[[name_it]],
model = "diagRE_DM", use_nlminb=T, smart_init_vals=F)
plot_betas(diagDM_newsigs[[name_it]], names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F)
diagDM_newsigs
names(diagDM_newsigs)
ct
ct <- 'Panc-Endocrine'
subset_sigs_additional_runs[[paste0(ct, '_allPancsigs')]] <- all_panc_sigs
name_it<- paste0(ct, '_allPancsigs')
new_sigs[[name_it]] <- extract_sigs_TMB_obj_QP(dataset_obj_trinucleotide = read_info_list[[ct]]$dataset_nucleotidesubstitution3,
subset_signatures = subset_sigs_additional_runs[[name_it]])
head(new_sigs[[name_it]]$Y)
diagDM_newsigs[[name_it]] <- wrapper_run_TMB(object = new_sigs[[name_it]],
model = "diagRE_DM", use_nlminb=T, smart_init_vals=F)
plot_betas(diagDM_newsigs[[name_it]], names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F)
df_Panc = lapply(diagDM_newsigs[grep('Panc', names(diagDM_newsigs))], function(l){
plot_betas(l, names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F, return_df = T)
}); names(df_CNS) <- gsub("_allPancsigs", "", names(subset_sigs_additional_runs[grep('Panc', names(diagDM_newsigs))]))
ggplot((dcast(melt(df_Panc), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed), scales = 'free')+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(x='LogR (wrt SBS40)', y=TeX(paste("$\\hat{\\beta}\\pm sd$")), fill='Cancer type' , shape='Cancer type' , color='Cancer type' )+
scale_fill_manual(values = pcawg_palette[names(df_Panc)])+
scale_color_manual(values = pcawg_palette[names(df_Panc)])
names(df_Panc)
names(df_Panc) <- gsub("_allPancsigs", "", names(subset_sigs_additional_runs[grep('Panc', names(diagDM_newsigs))]))
ggplot((dcast(melt(df_Panc), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed), scales = 'free')+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(x='LogR (wrt SBS40)', y=TeX(paste("$\\hat{\\beta}\\pm sd$")), fill='Cancer type' , shape='Cancer type' , color='Cancer type' )+
scale_fill_manual(values = pcawg_palette[names(df_Panc)])+
scale_color_manual(values = pcawg_palette[names(df_Panc)])
ggsave("../../results/results_TMB/pcawg/tissue_Panc_betas.pdf", height = 3)
ggsave("../../results/results_TMB/pcawg/tissue_Panc_betas.pdf", height = 3, width = 7)
ggsave("../../results/results_TMB/pcawg/tissue_Panc_betas.pdf", height = 3, width = 9)
all_kidney_sigs = unique(gtools::mixedsort(c(colnames(read_info_list$`Kidney-ChRCC`$dataset_active_sigs$Y),
colnames(read_info_list$`Kidney-RCC.clearcell`$dataset_active_sigs$Y),
colnames(read_info_list$`Kidney-RCC.papillary`$dataset_active_sigs$Y))))
all_kidney_sigs
ct <- 'Kidney-ChRCC'
subset_sigs_additional_runs[[paste0(ct, '_allKidneysigs')]] <- all_panc_sigs
name_it<- paste0(ct, '_allKidneysigs')
new_sigs[[name_it]] <- extract_sigs_TMB_obj_QP(dataset_obj_trinucleotide = read_info_list[[ct]]$dataset_nucleotidesubstitution3,
subset_signatures = subset_sigs_additional_runs[[name_it]])
head(new_sigs[[name_it]]$Y)
diagDM_newsigs[[name_it]] <- wrapper_run_TMB(object = new_sigs[[name_it]],
model = "diagRE_DM", use_nlminb=T, smart_init_vals=F)
plot_betas(diagDM_newsigs[[name_it]], names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F)
ct <- 'Kidney-RCC.clearcell'
subset_sigs_additional_runs[[paste0(ct, '_allKidneysigs')]] <- all_panc_sigs
name_it<- paste0(ct, '_allKidneysigs')
new_sigs[[name_it]] <- extract_sigs_TMB_obj_QP(dataset_obj_trinucleotide = read_info_list[[ct]]$dataset_nucleotidesubstitution3,
subset_signatures = subset_sigs_additional_runs[[name_it]])
head(new_sigs[[name_it]]$Y)
diagDM_newsigs[[name_it]] <- wrapper_run_TMB(object = new_sigs[[name_it]],
model = "diagRE_DM", use_nlminb=T, smart_init_vals=F)
plot_betas(diagDM_newsigs[[name_it]], names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F)
ct <- 'Kidney-RCC.papillary'
new_sigs
names(new_sigs)
saveRDS(new_sigs, "../../results/results_TMB/pcawg_robjects/tissue_specific_sigs.RDS")
saveRDS(diagDM_newsigs, "../../results/results_TMB/pcawg_robjects/tissue_specific_diagREDM.RDS")
df_Kidney = lapply(diagDM_newsigs[grep('Kidney', names(diagDM_newsigs))], function(l){
plot_betas(l, names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F, return_df = T)
}); names(df_Panc) <- gsub("_allKidneysigs", "", names(subset_sigs_additional_runs[grep('Kidney', names(diagDM_newsigs))]))
ggplot((dcast(melt(df_Kidney), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed), scales = 'free')+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(x='LogR (wrt SBS40)', y=TeX(paste("$\\hat{\\beta}\\pm sd$")), fill='Cancer type' , shape='Cancer type' , color='Cancer type' )+
scale_fill_manual(values = pcawg_palette[names(df_Kidney)])+
scale_color_manual(values = pcawg_palette[names(df_Kidney)])
all_panc_sigs
ggplot((dcast(melt(df_Panc), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed), scales = 'free')+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(x='LogR (wrt SBS51)', y=TeX(paste("$\\hat{\\beta}\\pm sd$")), fill='Cancer type' , shape='Cancer type' , color='Cancer type' )+
scale_fill_manual(values = pcawg_palette[names(df_Panc)])+
scale_color_manual(values = pcawg_palette[names(df_Panc)])
df_Panc = lapply(diagDM_newsigs[grep('Panc', names(diagDM_newsigs))], function(l){
plot_betas(l, names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F, return_df = T)
}); names(df_Panc) <- gsub("_allPancsigs", "", names(subset_sigs_additional_runs[grep('Panc', names(diagDM_newsigs))]))
ggplot((dcast(melt(df_Panc), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed), scales = 'free')+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(x='LogR (wrt SBS51)', y=TeX(paste("$\\hat{\\beta}\\pm sd$")), fill='Cancer type' , shape='Cancer type' , color='Cancer type' )+
scale_fill_manual(values = pcawg_palette[names(df_Panc)])+
scale_color_manual(values = pcawg_palette[names(df_Panc)])
ggsave("../../results/results_TMB/pcawg/tissue_Panc_betas.pdf", height = 3, width = 9)
ggplot((dcast(melt(df_Kidney), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed), scales = 'free')+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(x='LogR (wrt SBS40)', y=TeX(paste("$\\hat{\\beta}\\pm sd$")), fill='Cancer type' , shape='Cancer type' , color='Cancer type' )+
scale_fill_manual(values = pcawg_palette[names(df_Kidney)])+
scale_color_manual(values = pcawg_palette[names(df_Kidney)])
all_kidney_sigs
names(df_Kidney)
plot_betas(l, names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F, return_df = T)
df_Kidney = lapply(diagDM_newsigs[grep('Kidney', names(diagDM_newsigs))], function(l){
plot_betas(l, names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F, return_df = T)
}); names(df_Kidney) <- gsub("_allKidneysigs", "", names(subset_sigs_additional_runs[grep('Kidney', names(diagDM_newsigs))]))
ggplot((dcast(melt(df_Kidney), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed), scales = 'free')+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(x='LogR (wrt SBS41)', y=TeX(paste("$\\hat{\\beta}\\pm sd$")), fill='Cancer type' , shape='Cancer type' , color='Cancer type' )+
scale_fill_manual(values = pcawg_palette[names(df_Kidney)])+
scale_color_manual(values = pcawg_palette[names(df_Kidney)])
ggsave("../../results/results_TMB/pcawg/tissue_Kidney_betas.pdf", height = 3, width = 9)
ct <- 'Kidney-RCC.papillary'
subset_sigs_additional_runs[[paste0(ct, '_allKidneysigs')]] <- all_panc_sigs
name_it<- paste0(ct, '_allKidneysigs')
new_sigs[[name_it]] <- extract_sigs_TMB_obj_QP(dataset_obj_trinucleotide = read_info_list[[ct]]$dataset_nucleotidesubstitution3,
subset_signatures = subset_sigs_additional_runs[[name_it]])
head(new_sigs[[name_it]]$Y)
diagDM_newsigs[[name_it]] <- wrapper_run_TMB(object = new_sigs[[name_it]],
model = "diagRE_DM", use_nlminb=T, smart_init_vals=F)
plot_betas(diagDM_newsigs[[name_it]], names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F)
diagDM_newsigs[[name_it]] <- wrapper_run_TMB(object = new_sigs[[name_it]],
model = "diagRE_DM", use_nlminb=T, smart_init_vals=F)
df_Kidney = lapply(diagDM_newsigs[grep('Kidney', names(diagDM_newsigs))], function(l){
plot_betas(l, names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F, return_df = T)
}); names(df_Kidney) <- gsub("_allKidneysigs", "", names(subset_sigs_additional_runs[grep('Kidney', names(diagDM_newsigs))]))
ggplot((dcast(melt(df_Kidney), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed), scales = 'free')+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(x='LogR (wrt SBS41)', y=TeX(paste("$\\hat{\\beta}\\pm sd$")), fill='Cancer type' , shape='Cancer type' , color='Cancer type' )+
scale_fill_manual(values = pcawg_palette[names(df_Kidney)])+
scale_color_manual(values = pcawg_palette[names(df_Kidney)])
diagDM_newsigs[[name_it]] <- wrapper_run_TMB(object = new_sigs[[name_it]],
model = "diagRE_DM", use_nlminb=T, smart_init_vals=F)
plot_betas(diagDM_newsigs[[name_it]], names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F)
diagDM_newsigs[[name_it]] <- wrapper_run_TMB(object = new_sigs[[name_it]],
model = "diagRE_DM", use_nlminb=T, smart_init_vals=F)
plot_betas(diagDM_newsigs[[name_it]], names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F)
length(all_kidney_sigs)
new_sigs[[name_it]]
dim(new_sigs[[name_it]]$Y)
all_kidney_sigs
length(all_kidney_sigs)
all_kidney_sigs = unique(gtools::mixedsort(c(colnames(read_info_list$`Kidney-ChRCC`$dataset_active_sigs$Y),
colnames(read_info_list$`Kidney-RCC.clearcell`$dataset_active_sigs$Y),
colnames(read_info_list$`Kidney-RCC.papillary`$dataset_active_sigs$Y))))
all_kidney_sigs
ct <- 'Kidney-ChRCC'
subset_sigs_additional_runs[[paste0(ct, '_allKidneysigs')]] <- all_kidney_sigs
name_it<- paste0(ct, '_allKidneysigs')
new_sigs[[name_it]] <- extract_sigs_TMB_obj_QP(dataset_obj_trinucleotide = read_info_list[[ct]]$dataset_nucleotidesubstitution3,
subset_signatures = subset_sigs_additional_runs[[name_it]])
head(new_sigs[[name_it]]$Y)
diagDM_newsigs[[name_it]] <- wrapper_run_TMB(object = new_sigs[[name_it]],
model = "diagRE_DM", use_nlminb=T, smart_init_vals=F)
plot_betas(diagDM_newsigs[[name_it]], names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F)
ct <- 'Kidney-RCC.clearcell'
subset_sigs_additional_runs[[paste0(ct, '_allKidneysigs')]] <- all_kidney_sigs
name_it<- paste0(ct, '_allKidneysigs')
new_sigs[[name_it]] <- extract_sigs_TMB_obj_QP(dataset_obj_trinucleotide = read_info_list[[ct]]$dataset_nucleotidesubstitution3,
subset_signatures = subset_sigs_additional_runs[[name_it]])
head(new_sigs[[name_it]]$Y)
diagDM_newsigs[[name_it]] <- wrapper_run_TMB(object = new_sigs[[name_it]],
model = "diagRE_DM", use_nlminb=T, smart_init_vals=F)
plot_betas(diagDM_newsigs[[name_it]], names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F)
ct <- 'Kidney-RCC.papillary'
subset_sigs_additional_runs[[paste0(ct, '_allKidneysigs')]] <- all_kidney_sigs
name_it<- paste0(ct, '_allKidneysigs')
new_sigs[[name_it]] <- extract_sigs_TMB_obj_QP(dataset_obj_trinucleotide = read_info_list[[ct]]$dataset_nucleotidesubstitution3,
subset_signatures = subset_sigs_additional_runs[[name_it]])
head(new_sigs[[name_it]]$Y)
diagDM_newsigs[[name_it]] <- wrapper_run_TMB(object = new_sigs[[name_it]],
model = "diagRE_DM", use_nlminb=T, smart_init_vals=F)
plot_betas(diagDM_newsigs[[name_it]], names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F)
df_Kidney = lapply(diagDM_newsigs[grep('Kidney', names(diagDM_newsigs))], function(l){
plot_betas(l, names_cats = rev(rev(colnames(new_sigs[[name_it]]$Y))[-1]), remove_SBS = F, return_df = T)
}); names(df_Kidney) <- gsub("_allKidneysigs", "", names(subset_sigs_additional_runs[grep('Kidney', names(diagDM_newsigs))]))
ggplot((dcast(melt(df_Kidney), type_beta+LogR+L1~variable, value.var = 'value')),
aes(x=interaction(LogR), y=Estimate, group=L1, shape=L1, col=L1))+geom_point()+
facet_wrap(.~type_beta, drop = T, labeller = as_labeller(appender,
default = label_parsed), scales = 'free')+
geom_ribbon(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`, fill=L1), alpha=0.4)+
geom_errorbar(aes(ymin=Estimate-`Std. Error`, ymax=Estimate+`Std. Error`))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(x='LogR (wrt SBS41)', y=TeX(paste("$\\hat{\\beta}\\pm sd$")), fill='Cancer type' , shape='Cancer type' , color='Cancer type' )+
scale_fill_manual(values = pcawg_palette[names(df_Kidney)])+
scale_color_manual(values = pcawg_palette[names(df_Kidney)])
ggsave("../../results/results_TMB/pcawg/tissue_Kidney_betas.pdf", height = 3, width = 9)
